2025-05-21 10:11:22.418 +07:00 [INF] User profile is available. Using 'C:\Users\eng45\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-21 10:11:22.612 +07:00 [INF] Now listening on: http://localhost:5148
2025-05-21 10:11:22.643 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-21 10:11:22.645 +07:00 [INF] Hosting environment: Development
2025-05-21 10:11:22.646 +07:00 [INF] Content root path: D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\
2025-05-21 10:11:23.298 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:11:23.634 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:11:23.667 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:11:24.993 +07:00 [WRN] No store type was specified for the decimal property 'AlertValue' on entity type 'AlertHistory'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.006 +07:00 [WRN] No store type was specified for the decimal property 'MaxValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.009 +07:00 [WRN] No store type was specified for the decimal property 'MinValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.011 +07:00 [WRN] No store type was specified for the decimal property 'WarningMaxValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.012 +07:00 [WRN] No store type was specified for the decimal property 'WarningMinValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.014 +07:00 [WRN] No store type was specified for the decimal property 'HighAlertThreshold' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.015 +07:00 [WRN] No store type was specified for the decimal property 'LowAlertThreshold' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.018 +07:00 [WRN] No store type was specified for the decimal property 'MaxValidValue' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.020 +07:00 [WRN] No store type was specified for the decimal property 'MinValidValue' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:11:25.308 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:11:26.887 +07:00 [INF] Executed DbCommand (64ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:11:27.056 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:11:27.148 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:11:43.931 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:11:43.997 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:11:44.118 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:11:44.302 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:11:44.309 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:11:44.360 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:11:44.367 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:11:44.375 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:11:44.565 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:11:44.577 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:11:44.584 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:11:44.592 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:11:44.743 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:11:44.766 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:11:44.948 +07:00 [INF] Executed DbCommand (169ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:11:45.040 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:11:45.338 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:11:45.353 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:11:45.362 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:11:45.369 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:11:45.379 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:11:45.619 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:11:45.650 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:11:45.704 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:11:45.837 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:11:46.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:11:46.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:11:46.484 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-05-21 10:11:46.505 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:11:46.721 +07:00 [INF] Executed DbCommand (164ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:11:46.735 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:11:46.748 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:11:47.188 +07:00 [INF] Executed DbCommand (134ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:11:47.234 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:11:47.272 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:11:47.465 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:11:47.498 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:11:47.526 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:11:47.669 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:11:47.718 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:11:47.830 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:11:47.952 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:11:48.364 +07:00 [INF] Executed ViewResult - view Index executed in 21175.4387ms.
2025-05-21 10:11:48.375 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 24704.9355ms
2025-05-21 10:11:48.378 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:11:48.407 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 25115.7556ms
2025-05-21 10:11:48.424 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/css/cleanroom-monitoring.css - -
2025-05-21 10:11:48.427 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/css/site.css?v=GtFHbILBz036C1WoJMHKtq6pGpN9-zDGBijsVR5RdKQ - -
2025-05-21 10:11:48.436 +07:00 [INF] The file /css/cleanroom-monitoring.css was not modified
2025-05-21 10:11:48.436 +07:00 [INF] The file /css/site.css was not modified
2025-05-21 10:11:48.440 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/css/site.css?v=GtFHbILBz036C1WoJMHKtq6pGpN9-zDGBijsVR5RdKQ - - - 304 - text/css 13.0140ms
2025-05-21 10:11:48.440 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/css/cleanroom-monitoring.css - - - 304 - text/css 16.4185ms
2025-05-21 10:11:48.442 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:11:48.442 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:11:48.443 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:11:48.444 +07:00 [INF] The file /js/cleanroom-monitoring.js was not modified
2025-05-21 10:11:48.447 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 304 - application/javascript 5.5053ms
2025-05-21 10:11:48.451 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 8.4285ms
2025-05-21 10:11:48.518 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 75.9437ms
2025-05-21 10:11:48.655 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:11:48.662 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:11:48.674 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:11:48.690 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:11:48.713 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:11:48.835 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:11:48.887 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:11:48.941 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:11:48.959 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:11:48.997 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:11:49.044 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:11:49.053 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:11:49.074 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:11:49.100 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:11:49.108 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:11:49.138 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 462.7374ms
2025-05-21 10:11:49.140 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:11:49.141 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 486.4098ms
2025-05-21 10:11:54.410 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Alerts - -
2025-05-21 10:11:54.421 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.AlertsController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:11:54.424 +07:00 [INF] Route matched with {action = "Index", controller = "Alerts", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CleanroomMonitoring.Web.Controllers.AlertsController (CleanroomMonitoring.Web).
2025-05-21 10:11:54.539 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:11:54.585 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:11:54.613 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [t].[AlertMessage], [t].[AlertTime], [t].[AlertType], [t].[AlertValue], [t].[IsHandled], [t].[SensorInfoID], [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
    FROM [dbo].[AlertHistory] AS [a]
    ORDER BY [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
ORDER BY [t].[AlertTime] DESC
2025-05-21 10:11:54.639 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:11:54.755 +07:00 [INF] Executed ViewResult - view Index executed in 328.4743ms.
2025-05-21 10:11:54.757 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.AlertsController.Index (CleanroomMonitoring.Web) in 331.1414ms
2025-05-21 10:11:54.758 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.AlertsController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:11:54.759 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Alerts - - - 200 - text/html;+charset=utf-8 348.7946ms
2025-05-21 10:11:54.874 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:11:54.874 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:11:54.875 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.6435ms
2025-05-21 10:11:54.893 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 18.8234ms
2025-05-21 10:12:13.734 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:12:13.737 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:12:13.739 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:12:13.753 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:12:13.757 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 16.8233ms
2025-05-21 10:12:13.758 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:12:13.759 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 25.7629ms
2025-05-21 10:12:18.655 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:12:18.657 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:12:18.658 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:12:18.660 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:12:18.661 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.6875ms
2025-05-21 10:12:18.662 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:12:18.663 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 7.0287ms
2025-05-21 10:12:49.166 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:12:49.168 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:12:49.168 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:12:49.170 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:12:49.171 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.6931ms
2025-05-21 10:12:49.176 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:12:49.178 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 12.1074ms
2025-05-21 10:13:19.158 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:13:19.162 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:13:19.164 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:13:19.166 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:13:19.167 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.6772ms
2025-05-21 10:13:19.168 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:13:19.170 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 12.1510ms
2025-05-21 10:13:49.158 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:13:49.162 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:13:49.162 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:13:49.164 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:13:49.165 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.5424ms
2025-05-21 10:13:49.166 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:13:49.167 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 9.0333ms
2025-05-21 10:14:19.155 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:14:19.157 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:14:19.158 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:14:19.160 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:14:19.161 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.5434ms
2025-05-21 10:14:19.162 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:14:19.162 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 7.4138ms
2025-05-21 10:14:49.155 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:14:49.157 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:14:49.158 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:14:49.160 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:14:49.161 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.5362ms
2025-05-21 10:14:49.162 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:14:49.163 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 7.6136ms
2025-05-21 10:15:31.156 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:15:31.159 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:15:31.160 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:15:31.163 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:15:31.164 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 1.6824ms
2025-05-21 10:15:31.169 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:15:31.171 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 14.9171ms
2025-05-21 10:15:54.356 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Alerts - -
2025-05-21 10:15:54.362 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.AlertsController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:15:54.364 +07:00 [INF] Route matched with {action = "Index", controller = "Alerts", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller CleanroomMonitoring.Web.Controllers.AlertsController (CleanroomMonitoring.Web).
2025-05-21 10:15:54.367 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:15:54.369 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:15:54.382 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [t].[AlertMessage], [t].[AlertTime], [t].[AlertType], [t].[AlertValue], [t].[IsHandled], [t].[SensorInfoID], [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
    FROM [dbo].[AlertHistory] AS [a]
    ORDER BY [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
ORDER BY [t].[AlertTime] DESC
2025-05-21 10:15:54.393 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:15:54.398 +07:00 [INF] Executed ViewResult - view Index executed in 32.0586ms.
2025-05-21 10:15:54.400 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.AlertsController.Index (CleanroomMonitoring.Web) in 33.7269ms
2025-05-21 10:15:54.401 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.AlertsController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:15:54.403 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Alerts - - - 200 - text/html;+charset=utf-8 46.6221ms
2025-05-21 10:15:54.533 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:15:54.540 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:15:54.542 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.4919ms
2025-05-21 10:15:54.547 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 13.5925ms
2025-05-21 10:15:54.720 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - -
2025-05-21 10:15:54.725 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:15:54.733 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:15:54.738 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-21 10:15:54.740 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 3.6634ms
2025-05-21 10:15:54.742 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:15:54.743 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=ESGW - - - 400 - application/problem+json;+charset=utf-8 23.6544ms
2025-05-21 10:16:08.083 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:16:08.087 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:16:08.093 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:16:08.095 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:16:08.099 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:16:08.105 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:16:08.122 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:16:08.467 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:16:08.476 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:16:08.480 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:16:08.484 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:16:08.488 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:16:08.492 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:16:08.495 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:16:08.499 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:16:08.506 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:16:08.510 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:16:08.515 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:16:08.518 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:16:08.524 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:16:08.527 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:16:08.704 +07:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:16:08.749 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:16:08.758 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:16:08.762 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:16:08.765 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:16:08.768 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:16:08.771 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:16:08.780 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:16:08.784 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:16:08.791 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:16:08.854 +07:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:08.864 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:16:08.867 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:16:08.876 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:16:08.940 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:08.946 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:16:08.952 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:16:08.988 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:16:09.011 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:16:09.029 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:16:09.056 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:16:09.079 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:16:09.095 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:16:09.101 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:16:09.123 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:16:09.146 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:16:09.204 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:16:09.224 +07:00 [INF] Executed ViewResult - view Index executed in 1100.2102ms.
2025-05-21 10:16:09.225 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 1130.9973ms
2025-05-21 10:16:09.226 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:16:09.227 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 1144.5207ms
2025-05-21 10:16:09.307 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:16:09.309 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:16:09.314 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 4.5916ms
2025-05-21 10:16:09.316 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 9.6943ms
2025-05-21 10:16:09.355 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:16:09.358 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:09.359 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:16:09.362 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:16:09.369 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:16:09.414 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:16:09.423 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:09.442 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:09.448 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:16:09.458 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:09.474 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:09.479 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:16:09.487 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:09.497 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:09.500 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:16:09.505 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 143.8957ms
2025-05-21 10:16:09.506 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:09.507 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 151.4381ms
2025-05-21 10:16:12.100 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=5 - -
2025-05-21 10:16:12.103 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:12.103 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:16:12.105 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:16:12.118 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:16:12.122 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 111
2025-05-21 10:16:12.136 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 111) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 111) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:12.142 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 111) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:12.145 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 112
2025-05-21 10:16:12.153 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 112) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 112) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:12.158 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 112) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:12.166 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:16:12.166 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 61.9532ms
2025-05-21 10:16:12.168 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:12.169 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=5 - - - 200 - application/json;+charset=utf-8 68.5467ms
2025-05-21 10:16:30.374 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=17 - -
2025-05-21 10:16:30.377 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:30.378 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:16:30.380 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:16:30.384 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:16:30.390 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 137
2025-05-21 10:16:30.400 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 137) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 137) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:30.406 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 137) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:30.409 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 138
2025-05-21 10:16:30.419 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 138) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 138) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:30.427 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 138) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:30.428 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:16:30.430 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 50.6421ms
2025-05-21 10:16:30.431 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:30.431 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=17 - - - 200 - application/json;+charset=utf-8 57.0158ms
2025-05-21 10:16:34.182 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:16:34.184 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:34.185 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:16:34.188 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:16:34.244 +07:00 [INF] Executed DbCommand (54ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:16:34.251 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:16:34.267 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:34.286 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:34.299 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:16:34.334 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:34.364 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:34.389 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:16:34.426 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:34.448 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:34.452 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:16:34.453 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 266.4288ms
2025-05-21 10:16:34.454 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:34.455 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 273.1652ms
2025-05-21 10:16:39.365 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:16:39.367 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:39.367 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:16:39.369 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:16:39.373 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:16:39.378 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:16:39.382 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:39.387 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:39.391 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:16:39.396 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:39.400 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:39.404 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:16:39.408 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:16:39.412 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:16:39.414 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:16:39.414 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 45.7143ms
2025-05-21 10:16:39.415 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:16:39.416 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 51.3686ms
2025-05-21 10:17:09.371 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:17:09.373 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:17:09.374 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:17:09.376 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:17:09.434 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:17:09.440 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:17:09.444 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:17:09.447 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:17:09.451 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:17:09.455 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:17:09.458 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:17:09.461 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:17:09.464 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:17:09.468 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:17:09.470 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:17:09.471 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 95.5313ms
2025-05-21 10:17:09.472 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:17:09.472 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 101.7705ms
2025-05-21 10:17:39.369 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:17:39.374 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:17:39.375 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:17:39.377 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:17:39.423 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:17:39.434 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:17:39.439 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:17:39.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:17:39.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:17:39.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:17:39.454 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:17:39.457 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:17:39.460 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:17:39.463 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:17:39.465 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:17:39.466 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 89.3785ms
2025-05-21 10:17:39.467 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:17:39.468 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 99.5023ms
2025-05-21 10:18:09.379 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:18:09.383 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:18:09.384 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:18:09.386 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:18:09.448 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:18:09.473 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:18:09.486 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:18:09.492 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:18:09.495 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:18:09.500 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:18:09.509 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:18:09.512 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:18:09.516 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:18:09.520 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:18:09.522 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:18:09.522 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 137.0111ms
2025-05-21 10:18:09.523 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:18:09.524 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 144.8391ms
2025-05-21 10:18:39.363 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:18:39.368 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:18:39.369 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:18:39.371 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:18:39.374 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:18:39.380 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:18:39.389 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:18:39.401 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:18:39.404 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:18:39.408 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:18:39.413 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:18:39.417 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:18:39.421 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:18:39.425 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:18:39.427 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:18:39.427 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 57.413ms
2025-05-21 10:18:39.428 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:18:39.429 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 66.0870ms
2025-05-21 10:19:09.373 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:19:09.375 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:19:09.376 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:19:09.378 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:19:09.383 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:19:09.387 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:19:09.391 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:19:09.396 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:19:09.399 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:19:09.403 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:19:09.408 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:19:09.411 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:19:09.414 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:19:09.419 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:19:09.420 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:19:09.421 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 43.4902ms
2025-05-21 10:19:09.422 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:19:09.423 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 50.0519ms
2025-05-21 10:19:39.374 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:19:39.376 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:19:39.377 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:19:39.379 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:19:39.383 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:19:39.388 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:19:39.392 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:19:39.397 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:19:39.400 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:19:39.405 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:19:39.414 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:19:39.418 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:19:39.422 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:19:39.426 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:19:39.427 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:19:39.428 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 49.7371ms
2025-05-21 10:19:39.429 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:19:39.429 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 55.5984ms
2025-05-21 10:20:09.371 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:20:09.373 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:20:09.373 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:20:09.375 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:20:09.432 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:20:09.444 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:20:09.449 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:20:09.465 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:20:09.476 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:20:09.480 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:20:09.485 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:20:09.489 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:20:09.492 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:20:09.496 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:20:09.499 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:20:09.499 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 125.0204ms
2025-05-21 10:20:09.500 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:20:09.501 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 130.4848ms
2025-05-21 10:20:39.368 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:20:39.373 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:20:39.374 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:20:39.376 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:20:39.420 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:20:39.426 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:20:39.430 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:20:39.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:20:39.439 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:20:39.443 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:20:39.447 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:20:39.451 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:20:39.455 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:20:39.459 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:20:39.461 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:20:39.461 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 85.6802ms
2025-05-21 10:20:39.462 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:20:39.463 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 95.5960ms
2025-05-21 10:21:09.372 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:21:09.375 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=2F - -
2025-05-21 10:21:09.375 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:21:09.376 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:21:09.415 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:21:09.418 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:21:09.423 +07:00 [INF] Route matched with {action = "GetSensorMap", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSensorMap(System.String, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:21:09.439 +07:00 [INF] Executing ViewComponentResult, running EnhancedSensorMap.
2025-05-21 10:21:09.442 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:21:09.456 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:21:09.460 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:21:09.461 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:21:09.469 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 53)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:21:09.470 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:21:09.478 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:09.485 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:21:09.490 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:21:09.495 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:09.501 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:21:09.505 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:21:09.508 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:09.512 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:21:09.514 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:21:09.515 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 107.6999ms
2025-05-21 10:21:09.517 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:21:09.517 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 145.8707ms
2025-05-21 10:21:09.606 +07:00 [INF] Executed DbCommand (110ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:09.614 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234)
2025-05-21 10:21:09.620 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:21:09.625 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web) in 200.8416ms
2025-05-21 10:21:09.626 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:21:09.627 +07:00 [WRN] Unable to configure Browser Link script injection on the response. 
2025-05-21 10:21:09.627 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=2F - - - 200 - text/html;+charset=utf-8 252.7206ms
2025-05-21 10:21:39.369 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:21:39.373 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:21:39.374 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:21:39.375 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:21:39.427 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:21:39.432 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:21:39.436 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:39.440 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:21:39.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:21:39.448 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:39.457 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:21:39.460 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:21:39.463 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:21:39.467 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:21:39.468 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:21:39.469 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 94.6192ms
2025-05-21 10:21:39.470 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:21:39.471 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 101.3618ms
2025-05-21 10:22:09.369 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:22:09.371 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:22:09.372 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:22:09.373 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:22:09.421 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:22:09.426 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:22:09.430 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:22:09.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:22:09.438 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:22:09.441 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:22:09.446 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:22:09.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:22:09.459 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:22:09.462 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:22:09.465 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:22:09.466 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 92.7327ms
2025-05-21 10:22:09.466 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:22:09.467 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 98.1863ms
2025-05-21 10:22:39.365 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:22:39.367 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:22:39.368 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:22:39.370 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:22:39.414 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:22:39.419 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:22:39.423 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:22:39.432 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:22:39.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:22:39.438 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:22:39.442 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:22:39.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:22:39.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:22:39.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:22:39.455 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:22:39.455 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 86.1459ms
2025-05-21 10:22:39.456 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:22:39.457 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 91.9174ms
2025-05-21 10:23:09.370 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:23:09.376 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:23:09.377 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:23:09.380 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:23:09.426 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:23:09.432 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:23:09.437 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:23:09.442 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:23:09.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:23:09.450 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:23:09.454 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:23:09.457 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:23:09.461 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:23:09.466 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:23:09.467 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:23:09.468 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 89.1871ms
2025-05-21 10:23:09.469 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:23:09.470 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 99.7275ms
2025-05-21 10:23:39.366 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:23:39.372 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:23:39.373 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:23:39.374 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:23:39.420 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:23:39.426 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:23:39.430 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:23:39.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:23:39.438 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:23:39.442 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:23:39.445 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:23:39.449 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:23:39.453 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:23:39.457 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:23:39.458 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:23:39.459 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 85.1008ms
2025-05-21 10:23:39.460 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:23:39.460 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 94.0348ms
2025-05-21 10:24:09.368 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:24:09.371 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:24:09.371 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:24:09.373 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:24:09.414 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:24:09.430 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:24:09.446 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:24:09.452 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:24:09.456 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:24:09.463 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:24:09.473 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:24:09.477 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:24:09.481 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:24:09.485 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:24:09.487 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:24:09.488 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 115.2589ms
2025-05-21 10:24:09.489 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:24:09.489 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 121.2474ms
2025-05-21 10:24:39.365 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:24:39.368 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:24:39.370 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:24:39.373 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:24:39.427 +07:00 [INF] Executed DbCommand (52ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:24:39.434 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:24:39.438 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:24:39.441 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:24:39.445 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:24:39.452 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:24:39.458 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:24:39.461 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:24:39.468 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:24:39.473 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:24:39.474 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:24:39.475 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 102.9576ms
2025-05-21 10:24:39.476 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:24:39.477 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 111.8883ms
2025-05-21 10:24:46.179 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:24:46.185 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 6.1646ms
2025-05-21 10:24:46.474 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - -
2025-05-21 10:24:46.476 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - -
2025-05-21 10:24:46.480 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - -
2025-05-21 10:24:46.481 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - - - 404 0 - 6.7932ms
2025-05-21 10:24:46.492 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - - - 404 0 - 16.4219ms
2025-05-21 10:24:46.492 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - - - 404 0 - 12.0915ms
2025-05-21 10:25:09.369 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:25:09.372 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:25:09.373 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:25:09.375 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:25:09.419 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:25:09.424 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:25:09.428 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:25:09.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:25:09.436 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:25:09.439 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:25:09.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:25:09.447 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:25:09.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:25:09.454 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:25:09.455 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:25:09.456 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 81.433ms
2025-05-21 10:25:09.457 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:25:09.458 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 88.2242ms
2025-05-21 10:25:39.368 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - -
2025-05-21 10:25:39.370 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:25:39.370 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:25:39.372 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:25:39.413 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:25:39.420 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 131)
2025-05-21 10:25:39.429 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (127, 131) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:25:39.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (127, 131) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:25:39.436 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (128, 132)
2025-05-21 10:25:39.440 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (128, 132) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:25:39.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (128, 132) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:25:39.447 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 233
2025-05-21 10:25:39.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 233) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:25:39.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 233) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:25:39.455 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:25:39.455 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 83.8906ms
2025-05-21 10:25:39.456 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:25:39.457 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=6 - - - 200 - application/json;+charset=utf-8 89.2644ms
2025-05-21 10:26:08.027 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=15 - -
2025-05-21 10:26:08.034 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:08.034 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:26:08.037 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:26:08.043 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:26:08.048 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 151
2025-05-21 10:26:08.064 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 151) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 151) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:08.070 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 151) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:08.074 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 152
2025-05-21 10:26:08.082 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 152) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 152) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:08.088 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 152) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:08.090 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:26:08.090 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 54.2673ms
2025-05-21 10:26:08.091 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:08.092 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=15 - - - 200 - application/json;+charset=utf-8 64.8100ms
2025-05-21 10:26:09.367 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=15 - -
2025-05-21 10:26:09.367 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=3F - -
2025-05-21 10:26:09.368 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:09.370 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:26:09.398 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:26:09.400 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:26:09.401 +07:00 [INF] Route matched with {action = "GetSensorMap", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSensorMap(System.String, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:26:09.403 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:26:09.404 +07:00 [INF] Executing ViewComponentResult, running EnhancedSensorMap.
2025-05-21 10:26:09.407 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:26:09.408 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 151
2025-05-21 10:26:09.416 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 151) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 151) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:09.421 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 151) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:09.425 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 152
2025-05-21 10:26:09.430 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 152) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 152) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:09.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 152) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:09.437 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:26:09.437 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 50.0394ms
2025-05-21 10:26:09.438 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:09.439 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=15 - - - 200 - application/json;+charset=utf-8 72.6363ms
2025-05-21 10:26:09.456 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:26:09.461 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:26:09.471 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (26, 27, 28, 29, 30, 31, 32, 39, 40, 47, 50)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:26:09.567 +07:00 [INF] Executed DbCommand (76ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:09.574 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182)
2025-05-21 10:26:09.580 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:26:09.582 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web) in 178.7938ms
2025-05-21 10:26:09.583 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:26:09.584 +07:00 [WRN] Unable to configure Browser Link script injection on the response. 
2025-05-21 10:26:09.584 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=3F - - - 200 - text/html;+charset=utf-8 217.5083ms
2025-05-21 10:26:09.595 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/layout/3FP1.png - -
2025-05-21 10:26:09.596 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/layout/3FP1.png - - - 404 0 - 1.4082ms
2025-05-21 10:26:23.128 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - -
2025-05-21 10:26:23.134 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:23.136 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:26:23.139 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:26:23.145 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:26:23.153 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 181)
2025-05-21 10:26:23.171 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (159, 181) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:23.177 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:23.181 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (160, 182)
2025-05-21 10:26:23.190 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (160, 182) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:23.196 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:23.197 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:26:23.198 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 59.9679ms
2025-05-21 10:26:23.199 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:23.200 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - - - 200 - application/json;+charset=utf-8 71.8149ms
2025-05-21 10:26:39.364 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - -
2025-05-21 10:26:39.367 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:39.368 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:26:39.370 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:26:39.417 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:26:39.422 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 181)
2025-05-21 10:26:39.426 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (159, 181) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:39.432 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:39.435 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (160, 182)
2025-05-21 10:26:39.439 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (160, 182) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:26:39.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:26:39.445 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:26:39.446 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 76.4526ms
2025-05-21 10:26:39.447 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:26:39.447 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - - - 200 - application/json;+charset=utf-8 83.4095ms
2025-05-21 10:27:09.365 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - -
2025-05-21 10:27:09.367 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:27:09.367 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:27:09.369 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:27:09.413 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:27:09.419 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 181)
2025-05-21 10:27:09.423 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (159, 181) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:27:09.434 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:27:09.437 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (160, 182)
2025-05-21 10:27:09.441 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (160, 182) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:27:09.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:27:09.447 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:27:09.448 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 79.527ms
2025-05-21 10:27:09.449 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:27:09.450 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - - - 200 - application/json;+charset=utf-8 84.8520ms
2025-05-21 10:27:27.381 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - -
2025-05-21 10:27:27.389 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:27:27.391 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:27:27.393 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:27:27.442 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:27:27.457 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 181)
2025-05-21 10:27:27.466 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (159, 181) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:27:27.472 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:27:27.478 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (160, 182)
2025-05-21 10:27:27.483 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (160, 182) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:27:27.489 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:27:27.492 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:27:27.493 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 101.3854ms
2025-05-21 10:27:27.496 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:27:27.497 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - - - 200 - application/json;+charset=utf-8 116.6063ms
2025-05-21 10:27:27.620 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:27:27.622 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 2.4250ms
2025-05-21 10:27:41.039 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:27:41.042 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:27:41.043 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:27:41.045 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:27:41.154 +07:00 [INF] Executed DbCommand (107ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:27:41.211 +07:00 [INF] Executed DbCommand (53ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:27:41.230 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:27:41.232 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:27:41.236 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:27:41.242 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:27:41.247 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:27:41.250 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:27:41.256 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:27:41.260 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:27:41.267 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:27:41.277 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:27:41.282 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:27:41.286 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:27:41.291 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:27:41.298 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:27:41.301 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:27:41.522 +07:00 [INF] Executed DbCommand (218ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:27:41.557 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:27:41.564 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:27:41.568 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:27:41.572 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:27:41.575 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:27:41.579 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:27:41.583 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:27:41.587 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:27:41.594 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:27:41.664 +07:00 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:27:41.675 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:27:41.678 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:27:41.686 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:27:41.761 +07:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:27:41.766 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:27:41.771 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:27:41.798 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:27:41.826 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:27:41.843 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:27:41.867 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:27:41.885 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:27:41.900 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:27:41.907 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:27:41.945 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:27:41.972 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:27:42.033 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:27:42.052 +07:00 [INF] Executed ViewResult - view Index executed in 820.6067ms.
2025-05-21 10:27:42.053 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 1008.5323ms
2025-05-21 10:27:42.055 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:27:42.056 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 1017.2180ms
2025-05-21 10:27:42.119 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:27:42.121 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 2.2259ms
2025-05-21 10:27:42.184 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:27:42.186 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.8680ms
2025-05-21 10:27:42.304 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - -
2025-05-21 10:27:42.306 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - - - 404 0 - 1.8665ms
2025-05-21 10:27:42.325 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - -
2025-05-21 10:27:42.325 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - -
2025-05-21 10:27:42.327 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - - - 404 0 - 1.4502ms
2025-05-21 10:27:42.328 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - - - 404 0 - 3.1017ms
2025-05-21 10:28:12.260 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - -
2025-05-21 10:28:12.262 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:28:12.263 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:28:12.265 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:28:12.269 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:28:12.274 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 181)
2025-05-21 10:28:12.279 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (159, 181) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:28:12.287 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (159, 181) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:28:12.292 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (160, 182)
2025-05-21 10:28:12.296 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (160, 182) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:28:12.300 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (160, 182) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:28:12.301 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:28:12.302 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 38.0062ms
2025-05-21 10:28:12.304 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:28:12.305 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=50 - - - 200 - application/json;+charset=utf-8 44.4748ms
2025-05-21 10:28:13.701 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - -
2025-05-21 10:28:13.703 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:28:13.703 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:28:13.705 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:28:13.709 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:28:13.719 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 167
2025-05-21 10:28:13.730 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 167) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:28:13.737 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:28:13.741 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 168
2025-05-21 10:28:13.749 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 168) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:28:13.756 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:28:13.761 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:28:13.762 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 57.8229ms
2025-05-21 10:28:13.763 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:28:13.764 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - - - 200 - application/json;+charset=utf-8 63.1956ms
2025-05-21 10:28:42.263 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - -
2025-05-21 10:28:42.266 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:28:42.267 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:28:42.269 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:28:42.273 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:28:42.276 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 167
2025-05-21 10:28:42.281 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 167) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:28:42.284 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:28:42.287 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 168
2025-05-21 10:28:42.290 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 168) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:28:42.295 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:28:42.297 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:28:42.298 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 29.1511ms
2025-05-21 10:28:42.298 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:28:42.299 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - - - 200 - application/json;+charset=utf-8 36.5431ms
2025-05-21 10:29:12.258 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - -
2025-05-21 10:29:12.264 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:29:12.265 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:29:12.266 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:29:12.273 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:29:12.278 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 167
2025-05-21 10:29:12.286 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 167) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:29:12.290 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:29:12.293 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 168
2025-05-21 10:29:12.297 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 168) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:29:12.301 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:29:12.302 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:29:12.303 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 37.3311ms
2025-05-21 10:29:12.304 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:29:12.305 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - - - 200 - application/json;+charset=utf-8 46.2430ms
2025-05-21 10:29:42.263 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - -
2025-05-21 10:29:42.266 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:29:42.267 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:29:42.269 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:29:42.275 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:29:42.281 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 167
2025-05-21 10:29:42.286 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 167) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:29:42.292 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:29:42.340 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 168
2025-05-21 10:29:42.344 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 168) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:29:42.348 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:29:42.350 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:29:42.350 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 81.6984ms
2025-05-21 10:29:42.351 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:29:42.352 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - - - 200 - application/json;+charset=utf-8 88.7524ms
2025-05-21 10:30:12.263 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - -
2025-05-21 10:30:12.265 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:30:12.265 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:30:12.267 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:30:12.271 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:30:12.275 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 167
2025-05-21 10:30:12.280 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 167) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:30:12.284 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:30:12.287 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 168
2025-05-21 10:30:12.292 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 168) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:30:12.301 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:30:12.310 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:30:12.311 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 44.3963ms
2025-05-21 10:30:12.312 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:30:12.313 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - - - 200 - application/json;+charset=utf-8 50.2365ms
2025-05-21 10:30:42.262 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - -
2025-05-21 10:30:42.264 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:30:42.265 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:30:42.266 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:30:42.270 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:30:42.274 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 167
2025-05-21 10:30:42.279 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 167) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:30:42.284 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 167) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:30:42.289 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 168
2025-05-21 10:30:42.293 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 168) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:30:42.296 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 168) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:30:42.298 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:30:42.299 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 32.9907ms
2025-05-21 10:30:42.299 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:30:42.300 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=31 - - - 200 - application/json;+charset=utf-8 38.2109ms
2025-05-21 10:31:04.058 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=14 - -
2025-05-21 10:31:04.062 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:04.063 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:31:04.065 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:31:04.069 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:31:04.073 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 153
2025-05-21 10:31:04.089 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 153) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 153) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:04.103 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 153) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:04.107 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] = 154
2025-05-21 10:31:04.115 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE (([s].[SensorInfoID] = 154) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE (([s0].[SensorInfoID] = 154) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:04.123 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE (([s].[SensorInfoID] = 154) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:04.125 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:31:04.126 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 61.5167ms
2025-05-21 10:31:04.127 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:04.127 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=14 - - - 200 - application/json;+charset=utf-8 69.7029ms
2025-05-21 10:31:10.055 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:31:10.057 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:10.058 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:31:10.061 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:31:10.102 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:31:10.108 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:31:10.118 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:10.127 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:10.130 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:31:10.140 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:10.146 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:10.148 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:31:10.149 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 88.5366ms
2025-05-21 10:31:10.150 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:10.151 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 95.3523ms
2025-05-21 10:31:12.258 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:31:12.259 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:12.260 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:31:12.262 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:31:12.305 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:31:12.311 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:31:12.315 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:12.319 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:12.322 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:31:12.327 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:12.331 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:12.333 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:31:12.334 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 72.46ms
2025-05-21 10:31:12.334 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:12.335 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 77.5681ms
2025-05-21 10:31:42.259 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:31:42.265 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:42.265 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:31:42.267 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:31:42.317 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:31:42.322 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:31:42.327 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:42.336 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:42.340 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:31:42.345 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:31:42.351 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:31:42.356 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:31:42.357 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 91.1255ms
2025-05-21 10:31:42.358 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:31:42.359 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 100.1632ms
2025-05-21 10:32:12.264 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:32:12.266 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:32:12.267 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:32:12.268 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:32:12.310 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:32:12.319 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:32:12.324 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:32:12.329 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:32:12.332 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:32:12.336 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:32:12.340 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:32:12.342 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:32:12.343 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 75.1307ms
2025-05-21 10:32:12.344 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:32:12.345 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 80.7804ms
2025-05-21 10:32:42.259 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:32:42.261 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:32:42.262 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:32:42.264 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:32:42.279 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=2F - -
2025-05-21 10:32:42.285 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:32:42.286 +07:00 [INF] Route matched with {action = "GetSensorMap", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSensorMap(System.String, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:32:42.288 +07:00 [INF] Executing ViewComponentResult, running EnhancedSensorMap.
2025-05-21 10:32:42.290 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:32:42.305 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:32:42.306 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:32:42.311 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:32:42.313 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:32:42.316 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:32:42.323 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:32:42.325 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 53)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:32:42.327 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:32:42.334 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:32:42.340 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:32:42.344 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:32:42.345 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 81.558ms
2025-05-21 10:32:42.346 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:32:42.348 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 88.5679ms
2025-05-21 10:32:42.425 +07:00 [INF] Executed DbCommand (73ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:32:42.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234)
2025-05-21 10:32:42.439 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:32:42.442 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web) in 153.4137ms
2025-05-21 10:32:42.443 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:32:42.443 +07:00 [WRN] Unable to configure Browser Link script injection on the response. 
2025-05-21 10:32:42.444 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=2F - - - 200 - text/html;+charset=utf-8 165.4289ms
2025-05-21 10:33:12.258 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:33:12.261 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:33:12.263 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:33:12.266 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:33:12.314 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:33:12.319 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:33:12.323 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:33:12.327 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:33:12.331 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:33:12.335 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:33:12.339 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:33:12.340 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:33:12.341 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 76.037ms
2025-05-21 10:33:12.342 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:33:12.343 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 84.9010ms
2025-05-21 10:33:42.260 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:33:42.262 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:33:42.263 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:33:42.264 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:33:42.311 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:33:42.317 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:33:42.321 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:33:42.333 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:33:42.337 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:33:42.345 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:33:42.349 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:33:42.351 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:33:42.352 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 88.323ms
2025-05-21 10:33:42.353 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:33:42.354 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 93.8998ms
2025-05-21 10:34:12.267 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:34:12.269 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:34:12.270 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:34:12.271 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:34:12.321 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:34:12.326 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:34:12.330 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:34:12.334 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:34:12.338 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:34:12.347 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:34:12.350 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:34:12.353 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:34:12.353 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 82.366ms
2025-05-21 10:34:12.354 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:34:12.355 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 88.1120ms
2025-05-21 10:34:42.259 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:34:42.264 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:34:42.265 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:34:42.267 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:34:42.317 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:34:42.323 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:34:42.327 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:34:42.331 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:34:42.334 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:34:42.338 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:34:42.343 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:34:42.345 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:34:42.345 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 78.6817ms
2025-05-21 10:34:42.346 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:34:42.347 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 87.6838ms
2025-05-21 10:35:12.262 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:35:12.266 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:35:12.267 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:35:12.269 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:35:12.311 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:35:12.318 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:35:12.323 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:35:12.328 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:35:12.331 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:35:12.336 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:35:12.342 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:35:12.344 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:35:12.345 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 76.9751ms
2025-05-21 10:35:12.346 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:35:12.347 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 85.0290ms
2025-05-21 10:35:42.261 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:35:42.269 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:35:42.270 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:35:42.271 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:35:42.321 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:35:42.327 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:35:42.331 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:35:42.339 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:35:42.342 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:35:42.352 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:35:42.357 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:35:42.359 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:35:42.360 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 88.7975ms
2025-05-21 10:35:42.360 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:35:42.361 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 100.1417ms
2025-05-21 10:36:12.260 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:36:12.262 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:36:12.263 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:36:12.265 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:36:12.316 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:36:12.322 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:36:12.326 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:36:12.330 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:36:12.333 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:36:12.338 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:36:12.345 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:36:12.347 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:36:12.347 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 83.3707ms
2025-05-21 10:36:12.348 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:36:12.349 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 88.9183ms
2025-05-21 10:36:42.260 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:36:42.261 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:36:42.262 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:36:42.264 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:36:42.311 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:36:42.317 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:36:42.321 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:36:42.325 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:36:42.328 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:36:42.332 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:36:42.336 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:36:42.338 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:36:42.339 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 75.9366ms
2025-05-21 10:36:42.340 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:36:42.341 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 81.2409ms
2025-05-21 10:37:12.258 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:37:12.260 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:37:12.260 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:37:12.262 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:37:12.306 +07:00 [INF] Executed DbCommand (42ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:37:12.311 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:37:12.315 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:37:12.319 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:37:12.323 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:37:12.328 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:37:12.335 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:37:12.337 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:37:12.338 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 76.3671ms
2025-05-21 10:37:12.339 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:37:12.340 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 82.1549ms
2025-05-21 10:37:42.261 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:37:42.266 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:37:42.267 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:37:42.269 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:37:42.276 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=3F - -
2025-05-21 10:37:42.281 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:37:42.281 +07:00 [INF] Route matched with {action = "GetSensorMap", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSensorMap(System.String, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:37:42.282 +07:00 [INF] Executing ViewComponentResult, running EnhancedSensorMap.
2025-05-21 10:37:42.284 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:37:42.299 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:37:42.303 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:37:42.316 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (26, 27, 28, 29, 30, 31, 32, 39, 40, 47, 50)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:37:42.326 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:37:42.367 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:37:42.373 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:37:42.378 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:37:42.381 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:37:42.385 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:37:42.389 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:37:42.391 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:37:42.392 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 123.7653ms
2025-05-21 10:37:42.393 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:37:42.393 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 132.5116ms
2025-05-21 10:37:42.439 +07:00 [INF] Executed DbCommand (63ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:37:42.447 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182)
2025-05-21 10:37:42.454 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:37:42.456 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web) in 173.8943ms
2025-05-21 10:37:42.457 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:37:42.458 +07:00 [WRN] Unable to configure Browser Link script injection on the response. 
2025-05-21 10:37:42.458 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=3F - - - 200 - text/html;+charset=utf-8 182.0952ms
2025-05-21 10:37:42.467 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/layout/3FP1.png - -
2025-05-21 10:37:42.467 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/layout/3FP1.png - - - 404 0 - 0.9866ms
2025-05-21 10:38:12.257 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:38:12.259 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:38:12.260 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:38:12.261 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:38:12.310 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:38:12.315 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:38:12.319 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:38:12.323 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:38:12.326 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:38:12.329 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:38:12.333 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:38:12.334 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:38:12.335 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 74.2871ms
2025-05-21 10:38:12.336 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:38:12.337 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 80.3664ms
2025-05-21 10:38:42.257 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:38:42.259 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:38:42.260 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:38:42.261 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:38:42.306 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:38:42.313 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:38:42.317 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:38:42.321 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:38:42.324 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:38:42.328 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:38:42.331 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:38:42.333 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:38:42.334 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 73.0201ms
2025-05-21 10:38:42.334 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:38:42.335 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 78.5364ms
2025-05-21 10:39:12.256 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:39:12.259 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:39:12.260 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:39:12.261 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:39:12.301 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:39:12.308 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:39:12.313 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:39:12.319 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:39:12.326 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:39:12.330 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:39:12.334 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:39:12.337 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:39:12.338 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 77.8565ms
2025-05-21 10:39:12.339 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:39:12.341 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 84.2595ms
2025-05-21 10:39:42.284 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:39:42.291 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:39:42.293 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:39:42.298 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:39:42.352 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:39:42.357 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:39:42.360 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:39:42.364 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:39:42.366 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:39:42.371 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:39:42.375 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:39:42.377 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:39:42.378 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 80.4584ms
2025-05-21 10:39:42.378 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:39:42.379 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 94.9295ms
2025-05-21 10:40:12.272 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:40:12.274 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:40:12.275 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:40:12.277 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:40:12.324 +07:00 [INF] Executed DbCommand (45ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:40:12.333 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:40:12.337 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:40:12.341 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:40:12.344 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:40:12.348 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:40:12.352 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:40:12.354 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:40:12.355 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 78.412ms
2025-05-21 10:40:12.356 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:40:12.356 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 84.7858ms
2025-05-21 10:40:38.039 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:40:38.045 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:40:38.046 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:40:38.048 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:40:38.055 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:40:38.101 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:40:38.124 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:40:38.126 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:40:38.129 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:40:38.132 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:40:38.137 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:40:38.142 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:40:38.145 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:40:38.148 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:40:38.151 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:40:38.167 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:40:38.171 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:40:38.176 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:40:38.179 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:40:38.182 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:40:38.186 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:40:38.361 +07:00 [INF] Executed DbCommand (172ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:40:38.397 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:40:38.404 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:40:38.408 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:40:38.412 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:40:38.415 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:40:38.420 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:40:38.424 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:40:38.428 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:40:38.434 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:40:38.489 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:40:38.498 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:40:38.502 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:40:38.510 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:40:38.626 +07:00 [INF] Executed DbCommand (105ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:40:38.631 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:40:38.638 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:40:38.665 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:40:38.691 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:40:38.707 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:40:38.730 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:40:38.751 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:40:38.767 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:40:38.784 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:40:38.817 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:40:38.844 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:40:38.908 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:40:38.927 +07:00 [INF] Executed ViewResult - view Index executed in 801.1774ms.
2025-05-21 10:40:38.928 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 880.6258ms
2025-05-21 10:40:38.929 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:40:38.930 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 891.0925ms
2025-05-21 10:40:42.267 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:40:42.269 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:40:42.270 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:40:42.271 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:40:42.275 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:40:42.280 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:40:42.284 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:40:42.291 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:40:42.294 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:40:42.298 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:40:42.303 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:40:42.304 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:40:42.305 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 33.9275ms
2025-05-21 10:40:42.306 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:40:42.306 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 39.0381ms
2025-05-21 10:41:12.271 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:41:12.273 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:41:12.274 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:41:12.276 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:41:12.281 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:41:12.286 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:41:12.290 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:41:12.293 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:41:12.296 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:41:12.300 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:41:12.304 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:41:12.305 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:41:12.306 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 30.5185ms
2025-05-21 10:41:12.307 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:41:12.307 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 36.5596ms
2025-05-21 10:41:42.270 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - -
2025-05-21 10:41:42.272 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:41:42.273 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:41:42.274 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:41:42.278 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__roomId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE ([s].[IsActive] = CAST(1 AS bit)) AND ([s].[RoomID] = @__roomId_0)
2025-05-21 10:41:42.283 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105)
2025-05-21 10:41:42.288 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:41:42.295 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:41:42.299 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106)
2025-05-21 10:41:42.304 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:41:42.308 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:41:42.309 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:41:42.310 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 36.3588ms
2025-05-21 10:41:42.311 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:41:42.312 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=2 - - - 200 - application/json;+charset=utf-8 41.8707ms
2025-05-21 10:42:03.473 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:42:03.479 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:42:03.483 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:42:03.486 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:42:03.498 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:42:03.515 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:42:03.540 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:42:03.917 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:42:03.927 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:42:03.933 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:42:03.942 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:42:03.948 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:42:03.954 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:42:03.966 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:42:03.981 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:42:03.992 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:42:03.998 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:42:04.004 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:42:04.011 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:42:04.016 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:42:04.020 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:42:04.192 +07:00 [INF] Executed DbCommand (170ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:42:04.232 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:42:04.242 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:42:04.248 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:42:04.257 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:42:04.262 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:42:04.269 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:42:04.280 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:42:04.300 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:42:04.312 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:42:04.401 +07:00 [INF] Executed DbCommand (81ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:04.635 +07:00 [INF] Executed DbCommand (218ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:42:04.646 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:42:04.726 +07:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:42:04.807 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:04.812 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:42:04.817 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:42:04.852 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:42:04.878 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:42:04.894 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:42:04.913 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:42:04.934 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:42:04.950 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:42:04.957 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:42:04.983 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:42:05.005 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:42:05.068 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:42:05.088 +07:00 [INF] Executed ViewResult - view Index executed in 1545.4992ms.
2025-05-21 10:42:05.089 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 1603.4115ms
2025-05-21 10:42:05.090 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:42:05.091 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 1617.4635ms
2025-05-21 10:42:05.181 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:42:05.183 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:42:05.185 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 2.6506ms
2025-05-21 10:42:05.188 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.4550ms
2025-05-21 10:42:05.281 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:42:05.284 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 2.7005ms
2025-05-21 10:42:05.391 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:42:05.396 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:42:05.401 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:42:05.404 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:42:05.410 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:42:05.413 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - -
2025-05-21 10:42:05.415 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - - - 404 0 - 1.6116ms
2025-05-21 10:42:05.432 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - -
2025-05-21 10:42:05.434 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - -
2025-05-21 10:42:05.434 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - - - 404 0 - 1.7472ms
2025-05-21 10:42:05.436 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - - - 404 0 - 2.1457ms
2025-05-21 10:42:05.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:42:05.457 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:05.475 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:42:05.480 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:42:05.486 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:05.501 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:42:05.505 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:42:05.511 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:05.524 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:42:05.526 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:42:05.531 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 127.6447ms
2025-05-21 10:42:05.532 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:42:05.534 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 142.7918ms
2025-05-21 10:42:35.370 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:42:35.373 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:42:35.373 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:42:35.375 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:42:35.380 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:42:35.420 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:42:35.427 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:35.441 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:42:35.444 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:42:35.450 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:35.463 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:42:35.468 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:42:35.473 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:42:35.482 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:42:35.485 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:42:35.485 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 110.8252ms
2025-05-21 10:42:35.486 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:42:35.487 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 117.2704ms
2025-05-21 10:43:02.190 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:43:02.194 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:43:02.196 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:43:02.198 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:02.205 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:43:02.210 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:43:02.225 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:43:02.228 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:43:02.231 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:43:02.241 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:43:02.246 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:43:02.255 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:02.259 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:43:02.262 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:43:02.265 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:43:02.271 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:43:02.274 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:43:02.278 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:43:02.281 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:43:02.287 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:02.290 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:43:02.463 +07:00 [INF] Executed DbCommand (170ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:43:02.498 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:43:02.508 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:43:02.513 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:43:02.516 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:43:02.520 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:43:02.523 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:43:02.527 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:43:02.530 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:43:02.537 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:43:02.600 +07:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:02.613 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:43:02.615 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:43:02.624 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:43:02.691 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:02.696 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:43:02.704 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:43:02.734 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:02.760 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:02.776 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:02.798 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:02.816 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:02.830 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:02.836 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:43:02.859 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:02.881 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:02.940 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:43:02.960 +07:00 [INF] Executed ViewResult - view Index executed in 732.3962ms.
2025-05-21 10:43:02.962 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 764.2396ms
2025-05-21 10:43:02.963 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:43:02.965 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 774.9693ms
2025-05-21 10:43:03.067 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:43:03.070 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:43:03.071 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.3434ms
2025-05-21 10:43:03.073 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.3228ms
2025-05-21 10:43:03.138 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:43:03.140 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 2.2573ms
2025-05-21 10:43:03.249 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - -
2025-05-21 10:43:03.251 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - - - 404 0 - 1.8367ms
2025-05-21 10:43:03.253 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:43:03.254 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:03.255 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:43:03.256 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:03.261 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:03.293 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - -
2025-05-21 10:43:03.293 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - -
2025-05-21 10:43:03.295 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - - - 404 0 - 1.8888ms
2025-05-21 10:43:03.296 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - - - 404 0 - 3.3602ms
2025-05-21 10:43:03.298 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:43:03.307 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:03.325 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:03.330 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:43:03.338 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:03.358 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:03.364 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:03.372 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:03.385 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:03.388 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:43:03.390 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 133.7253ms
2025-05-21 10:43:03.391 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:03.392 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 138.9293ms
2025-05-21 10:43:33.269 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:43:33.274 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:33.276 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:43:33.279 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:33.334 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:33.371 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:43:33.381 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:33.397 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:33.401 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:43:33.407 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:33.420 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:33.424 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:33.429 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:33.439 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:33.441 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:43:33.441 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 162.7255ms
2025-05-21 10:43:33.442 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:33.443 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 173.5487ms
2025-05-21 10:43:35.109 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:43:35.112 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:43:35.113 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:43:35.114 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:35.121 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:43:35.171 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:43:35.189 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:43:35.193 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:43:35.200 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:43:35.206 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:43:35.211 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:43:35.220 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:35.224 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:43:35.227 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:43:35.234 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:43:35.242 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:43:35.250 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:43:35.257 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:43:35.262 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:43:35.268 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:35.276 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:43:35.438 +07:00 [INF] Executed DbCommand (160ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:43:35.479 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:43:35.489 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:43:35.497 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:43:35.501 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:43:35.520 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:43:35.528 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:43:35.539 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:43:35.553 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:43:35.568 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:43:35.632 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:35.642 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:43:35.645 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:43:35.656 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:43:35.727 +07:00 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:35.734 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:43:35.740 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:43:35.778 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:35.808 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:35.825 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:35.848 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:35.867 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:35.879 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:35.886 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:43:35.911 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:35.935 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:35.992 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:43:36.008 +07:00 [INF] Executed ViewResult - view Index executed in 814.7828ms.
2025-05-21 10:43:36.009 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 895.2821ms
2025-05-21 10:43:36.010 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:43:36.011 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 901.8671ms
2025-05-21 10:43:36.111 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:43:36.114 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:43:36.116 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.7213ms
2025-05-21 10:43:36.117 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.8186ms
2025-05-21 10:43:36.152 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:43:36.154 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 2.4952ms
2025-05-21 10:43:36.236 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - -
2025-05-21 10:43:36.237 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - -
2025-05-21 10:43:36.243 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:43:36.243 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - - - 404 0 - 6.5579ms
2025-05-21 10:43:36.243 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - - - 404 0 - 5.9996ms
2025-05-21 10:43:36.244 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:36.245 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:43:36.247 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:36.255 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:36.292 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:43:36.299 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:36.301 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - -
2025-05-21 10:43:36.304 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - - - 404 0 - 2.7230ms
2025-05-21 10:43:36.318 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:36.328 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:43:36.340 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:36.359 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:36.363 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:36.368 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:36.379 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:36.383 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:43:36.384 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 137.255ms
2025-05-21 10:43:36.385 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:36.386 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 143.2020ms
2025-05-21 10:43:46.893 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:43:46.896 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:43:46.897 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:43:46.899 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:46.903 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:43:46.949 +07:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:43:46.960 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:43:46.962 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:43:46.965 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:43:46.968 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:43:46.971 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:43:46.974 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:46.977 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:43:46.980 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:43:46.983 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:43:46.988 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:43:46.991 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:43:46.994 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:43:46.998 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:43:47.001 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:47.004 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:43:47.174 +07:00 [INF] Executed DbCommand (168ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:43:47.206 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:43:47.213 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:43:47.217 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:43:47.221 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:43:47.224 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:43:47.228 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:43:47.232 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:43:47.237 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:43:47.243 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:43:47.295 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:47.304 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:43:47.307 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:43:47.316 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:43:47.382 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:47.387 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:43:47.393 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:43:47.419 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:47.444 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:47.460 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:43:47.480 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:47.498 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:47.512 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:43:47.518 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:43:47.542 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:47.567 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:47.627 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:43:47.644 +07:00 [INF] Executed ViewResult - view Index executed in 681.6708ms.
2025-05-21 10:43:47.645 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 746.3291ms
2025-05-21 10:43:47.646 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:43:47.647 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 753.8584ms
2025-05-21 10:43:47.738 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - -
2025-05-21 10:43:47.739 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:43:47.741 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/.well-known/appspecific/com.chrome.devtools.json - - - 404 0 - 2.4365ms
2025-05-21 10:43:47.742 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:43:47.744 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.4769ms
2025-05-21 10:43:47.745 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.2708ms
2025-05-21 10:43:47.811 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - -
2025-05-21 10:43:47.813 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.umd.js.map - - - 404 0 - 2.0810ms
2025-05-21 10:43:47.817 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:43:47.819 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:47.819 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:43:47.822 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:43:47.832 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:43:47.832 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - -
2025-05-21 10:43:47.832 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - -
2025-05-21 10:43:47.836 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation.min.js.map - - - 404 0 - 3.7705ms
2025-05-21 10:43:47.837 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/sm/67dbe90480f98dbadab5f76f93197118b03ce65a6932fed6c64b024935f736b4.map - - - 404 0 - 4.9149ms
2025-05-21 10:43:47.890 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:43:47.900 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:47.926 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:47.933 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:43:47.942 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:47.965 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:47.977 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:43:47.995 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:43:48.011 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:43:48.015 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:43:48.017 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 195.9006ms
2025-05-21 10:43:48.018 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:43:48.020 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 202.2391ms
2025-05-21 10:44:06.605 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:44:06.610 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:44:06.611 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:44:06.613 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:44:06.617 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:44:06.623 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:44:06.635 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:44:06.638 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:44:06.640 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:44:06.644 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:44:06.648 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:44:06.652 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:06.656 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:44:06.660 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:44:06.664 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:44:06.670 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:44:06.675 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:44:06.679 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:44:06.697 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:44:06.713 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:06.715 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:44:06.887 +07:00 [INF] Executed DbCommand (170ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:44:06.922 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:44:06.928 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:44:06.932 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:44:06.936 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:44:06.939 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:44:06.943 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:44:06.947 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:44:06.950 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:44:06.957 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:44:07.009 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:07.020 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:44:07.024 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:44:07.032 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:44:07.110 +07:00 [INF] Executed DbCommand (66ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:07.115 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:44:07.122 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:44:07.150 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:07.176 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:07.196 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:07.223 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:07.245 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:07.259 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:07.264 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:44:07.286 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:07.308 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:07.373 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:44:07.388 +07:00 [INF] Executed ViewResult - view Index executed in 750.2225ms.
2025-05-21 10:44:07.389 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 777.0459ms
2025-05-21 10:44:07.390 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:44:07.391 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 786.7779ms
2025-05-21 10:44:07.468 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/css/bootstrap.min.css - -
2025-05-21 10:44:07.473 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/css/site.css?v=GtFHbILBz036C1WoJMHKtq6pGpN9-zDGBijsVR5RdKQ - -
2025-05-21 10:44:07.474 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/css/cleanroom-monitoring.css - -
2025-05-21 10:44:07.475 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/1F.png - -
2025-05-21 10:44:07.476 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/layout/1FP1.png - -
2025-05-21 10:44:07.478 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/jquery/dist/jquery.min.js - -
2025-05-21 10:44:07.484 +07:00 [INF] Sending file. Request path: '/css/site.css'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\css\site.css'
2025-05-21 10:44:07.484 +07:00 [INF] Sending file. Request path: '/css/cleanroom-monitoring.css'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\css\cleanroom-monitoring.css'
2025-05-21 10:44:07.525 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/css/site.css?v=GtFHbILBz036C1WoJMHKtq6pGpN9-zDGBijsVR5RdKQ - - - 200 5187 text/css 51.6807ms
2025-05-21 10:44:07.535 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/css/cleanroom-monitoring.css - - - 200 1044 text/css 60.5107ms
2025-05-21 10:44:07.544 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.js - -
2025-05-21 10:44:07.549 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/js/bootstrap.bundle.min.js - -
2025-05-21 10:44:07.616 +07:00 [INF] Sending file. Request path: '/img/1F.png'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\img\1F.PNG'
2025-05-21 10:44:07.616 +07:00 [INF] Sending file. Request path: '/lib/bootstrap/dist/css/bootstrap.min.css'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\bootstrap\dist\css\bootstrap.min.css'
2025-05-21 10:44:07.616 +07:00 [INF] Sending file. Request path: '/lib/jquery/dist/jquery.min.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\jquery\dist\jquery.min.js'
2025-05-21 10:44:07.616 +07:00 [INF] Sending file. Request path: '/img/layout/1FP1.png'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\img\layout\1FP1.PNG'
2025-05-21 10:44:07.618 +07:00 [INF] Sending file. Request path: '/lib/bootstrap/dist/js/bootstrap.bundle.min.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\bootstrap\dist\js\bootstrap.bundle.min.js'
2025-05-21 10:44:07.619 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/1F.png - - - 200 236009 image/png 143.7986ms
2025-05-21 10:44:07.620 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/css/bootstrap.min.css - - - 200 155845 text/css 151.6751ms
2025-05-21 10:44:07.621 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/jquery/dist/jquery.min.js - - - 200 89476 application/javascript 142.1739ms
2025-05-21 10:44:07.622 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/layout/1FP1.png - - - 200 236009 image/png 145.8170ms
2025-05-21 10:44:07.622 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/js/bootstrap.bundle.min.js - - - 200 78468 application/javascript 73.8367ms
2025-05-21 10:44:07.623 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/moment.min.js - -
2025-05-21 10:44:07.623 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation@1.0.0.js - -
2025-05-21 10:44:07.624 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/sensorchart.js - -
2025-05-21 10:44:07.625 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:44:07.625 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-adapter-moment.min v1.0.1.js - -
2025-05-21 10:44:07.627 +07:00 [INF] Sending file. Request path: '/js/sensorchart.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\js\sensorChart.js'
2025-05-21 10:44:07.629 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/sensorchart.js - - - 200 6391 application/javascript 4.2841ms
2025-05-21 10:44:07.630 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:44:07.630 +07:00 [INF] Sending file. Request path: '/lib/chartjs/chartjs-adapter-moment.min v1.0.1.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\chartjs-adapter-moment.min v1.0.1.js'
2025-05-21 10:44:07.631 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 0.9210ms
2025-05-21 10:44:07.632 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-adapter-moment.min v1.0.1.js - - - 200 1376 application/javascript 6.6714ms
2025-05-21 10:44:07.634 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:44:07.639 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.3253ms
2025-05-21 10:44:07.650 +07:00 [INF] Sending file. Request path: '/js/cleanroom-monitoring.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\js\cleanroom-monitoring.js'
2025-05-21 10:44:07.651 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 200 15369 application/javascript 26.2119ms
2025-05-21 10:44:07.653 +07:00 [INF] Sending file. Request path: '/lib/chartjs/chartjs-plugin-annotation@1.0.0.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\chartjs-plugin-annotation@1.0.0.js'
2025-05-21 10:44:07.655 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation@1.0.0.js - - - 200 13602 application/javascript 31.1690ms
2025-05-21 10:44:07.658 +07:00 [INF] Sending file. Request path: '/lib/chartjs/chart.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\chart.js'
2025-05-21 10:44:07.659 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.js - - - 200 205749 application/javascript 115.2138ms
2025-05-21 10:44:07.661 +07:00 [INF] Sending file. Request path: '/lib/chartjs/moment.min.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\moment.min.js'
2025-05-21 10:44:07.661 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/moment.min.js - - - 200 59610 application/javascript 38.4852ms
2025-05-21 10:44:07.701 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:44:07.703 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:44:07.704 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:44:07.705 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:44:07.710 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:07.761 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:44:07.770 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:07.789 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:07.795 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:44:07.803 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:07.822 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:07.828 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:07.848 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:07.864 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:07.867 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:44:07.869 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 163.9634ms
2025-05-21 10:44:07.870 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:44:07.871 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 170.1290ms
2025-05-21 10:44:07.894 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/favicon.ico - -
2025-05-21 10:44:07.897 +07:00 [INF] Sending file. Request path: '/favicon.ico'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\favicon.ico'
2025-05-21 10:44:07.899 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/favicon.ico - - - 200 6782 image/x-icon 4.6168ms
2025-05-21 10:44:32.470 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:44:32.473 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:44:32.477 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:44:32.479 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:44:32.483 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:44:32.489 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:44:32.499 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:44:32.677 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:44:32.685 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:44:32.688 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:44:32.692 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:44:32.694 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:32.697 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:44:32.700 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:44:32.703 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:44:32.708 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:44:32.710 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:44:32.714 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:44:32.717 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:44:32.720 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:32.723 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:44:32.895 +07:00 [INF] Executed DbCommand (170ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:44:32.932 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:44:32.940 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:44:32.944 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:44:32.948 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:44:32.953 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:44:32.957 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:44:32.961 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:44:32.965 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:44:32.972 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:44:33.032 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:33.042 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:44:33.045 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:44:33.066 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:44:33.141 +07:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:33.146 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:44:33.151 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:44:33.186 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:33.209 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:33.228 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:33.250 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:33.267 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:33.279 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:33.285 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:44:33.308 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:33.330 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:33.387 +07:00 [INF] Executed DbCommand (29ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:44:33.406 +07:00 [INF] Executed ViewResult - view Index executed in 904.2823ms.
2025-05-21 10:44:33.407 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 928.3645ms
2025-05-21 10:44:33.408 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:44:33.409 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 939.1536ms
2025-05-21 10:44:33.464 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:44:33.465 +07:00 [INF] The file /js/cleanroom-monitoring.js was not modified
2025-05-21 10:44:33.467 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 304 - application/javascript 2.7906ms
2025-05-21 10:44:33.488 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:44:33.489 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:44:33.491 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.4323ms
2025-05-21 10:44:33.493 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.1662ms
2025-05-21 10:44:33.521 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:44:33.522 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:44:33.528 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:44:33.530 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:44:33.548 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:33.601 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:44:33.618 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:33.644 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:33.655 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:44:33.671 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:33.691 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:33.701 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:33.718 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:33.732 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:33.736 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:44:33.739 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 210.114ms
2025-05-21 10:44:33.741 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:44:33.741 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 220.4999ms
2025-05-21 10:44:40.399 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:44:40.405 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:44:40.406 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:44:40.408 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:44:40.411 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:44:40.415 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:44:40.425 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:44:40.427 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:44:40.429 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:44:40.432 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:44:40.436 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:44:40.438 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:40.441 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:44:40.444 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:44:40.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:44:40.451 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:44:40.455 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:44:40.459 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:44:40.462 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:44:40.464 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:40.468 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:44:40.643 +07:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:44:40.681 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:44:40.689 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:44:40.693 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:44:40.698 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:44:40.703 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:44:40.707 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:44:40.710 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:44:40.714 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:44:40.722 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:44:40.795 +07:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:40.819 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:44:40.842 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:44:40.850 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:44:40.918 +07:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:40.923 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:44:40.928 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:44:40.956 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:40.983 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:40.999 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:44:41.020 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:41.038 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:41.050 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:44:41.054 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:44:41.077 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:41.100 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:41.156 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:44:41.172 +07:00 [INF] Executed ViewResult - view Index executed in 744.7334ms.
2025-05-21 10:44:41.173 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 765.5754ms
2025-05-21 10:44:41.174 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:44:41.176 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 777.3485ms
2025-05-21 10:44:41.230 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/css/bootstrap.min.css - -
2025-05-21 10:44:41.234 +07:00 [INF] Sending file. Request path: '/lib/bootstrap/dist/css/bootstrap.min.css'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\bootstrap\dist\css\bootstrap.min.css'
2025-05-21 10:44:41.235 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/css/bootstrap.min.css - - - 200 155845 text/css 5.2768ms
2025-05-21 10:44:41.250 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/css/site.css?v=GtFHbILBz036C1WoJMHKtq6pGpN9-zDGBijsVR5RdKQ - -
2025-05-21 10:44:41.250 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/css/cleanroom-monitoring.css - -
2025-05-21 10:44:41.250 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/1F.png - -
2025-05-21 10:44:41.251 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/layout/1FP1.png - -
2025-05-21 10:44:41.253 +07:00 [INF] Sending file. Request path: '/css/site.css'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\css\site.css'
2025-05-21 10:44:41.251 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/jquery/dist/jquery.min.js - -
2025-05-21 10:44:41.271 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/css/site.css?v=GtFHbILBz036C1WoJMHKtq6pGpN9-zDGBijsVR5RdKQ - - - 200 5187 text/css 19.9034ms
2025-05-21 10:44:41.260 +07:00 [INF] Sending file. Request path: '/css/cleanroom-monitoring.css'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\css\cleanroom-monitoring.css'
2025-05-21 10:44:41.284 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.js - -
2025-05-21 10:44:41.294 +07:00 [INF] Sending file. Request path: '/lib/jquery/dist/jquery.min.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\jquery\dist\jquery.min.js'
2025-05-21 10:44:41.292 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/css/cleanroom-monitoring.css - - - 200 1044 text/css 41.8397ms
2025-05-21 10:44:41.305 +07:00 [INF] Sending file. Request path: '/img/1F.png'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\img\1F.PNG'
2025-05-21 10:44:41.305 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/jquery/dist/jquery.min.js - - - 200 89476 application/javascript 53.9852ms
2025-05-21 10:44:41.305 +07:00 [INF] Sending file. Request path: '/img/layout/1FP1.png'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\img\layout\1FP1.PNG'
2025-05-21 10:44:41.306 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/moment.min.js - -
2025-05-21 10:44:41.268 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/js/bootstrap.bundle.min.js - -
2025-05-21 10:44:41.317 +07:00 [INF] Sending file. Request path: '/lib/chartjs/chart.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\chart.js'
2025-05-21 10:44:41.321 +07:00 [INF] Sending file. Request path: '/lib/chartjs/moment.min.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\moment.min.js'
2025-05-21 10:44:41.317 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/1F.png - - - 200 236009 image/png 66.2005ms
2025-05-21 10:44:41.317 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-adapter-moment.min v1.0.1.js - -
2025-05-21 10:44:41.318 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/layout/1FP1.png - - - 200 236009 image/png 67.8793ms
2025-05-21 10:44:41.323 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/moment.min.js - - - 200 59610 application/javascript 16.2955ms
2025-05-21 10:44:41.323 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/sensorchart.js - -
2025-05-21 10:44:41.325 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation@1.0.0.js - -
2025-05-21 10:44:41.322 +07:00 [INF] Sending file. Request path: '/lib/bootstrap/dist/js/bootstrap.bundle.min.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\bootstrap\dist\js\bootstrap.bundle.min.js'
2025-05-21 10:44:41.325 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:44:41.328 +07:00 [INF] Sending file. Request path: '/lib/chartjs/chartjs-plugin-annotation@1.0.0.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\chartjs-plugin-annotation@1.0.0.js'
2025-05-21 10:44:41.322 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chart.js - - - 200 205749 application/javascript 37.3749ms
2025-05-21 10:44:41.327 +07:00 [INF] Sending file. Request path: '/js/sensorchart.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\js\sensorChart.js'
2025-05-21 10:44:41.325 +07:00 [INF] Sending file. Request path: '/lib/chartjs/chartjs-adapter-moment.min v1.0.1.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\lib\chartjs\chartjs-adapter-moment.min v1.0.1.js'
2025-05-21 10:44:41.328 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/bootstrap/dist/js/bootstrap.bundle.min.js - - - 200 78468 application/javascript 60.5295ms
2025-05-21 10:44:41.329 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 3.7497ms
2025-05-21 10:44:41.330 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-plugin-annotation@1.0.0.js - - - 200 13602 application/javascript 5.6998ms
2025-05-21 10:44:41.332 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:44:41.332 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/sensorchart.js - - - 200 6391 application/javascript 9.3623ms
2025-05-21 10:44:41.333 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/lib/chartjs/chartjs-adapter-moment.min v1.0.1.js - - - 200 1376 application/javascript 16.0850ms
2025-05-21 10:44:41.334 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:44:41.337 +07:00 [INF] Sending file. Request path: '/js/cleanroom-monitoring.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\js\cleanroom-monitoring.js'
2025-05-21 10:44:41.340 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 200 15369 application/javascript 8.1057ms
2025-05-21 10:44:41.342 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 8.0740ms
2025-05-21 10:44:41.358 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:44:41.363 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:44:41.364 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:44:41.366 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:44:41.372 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:44:41.414 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:44:41.421 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:41.436 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:41.440 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:44:41.448 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:41.463 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:41.468 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:44:41.475 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:44:41.486 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:44:41.489 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:44:41.490 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 123.8097ms
2025-05-21 10:44:41.490 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:44:41.491 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 133.5461ms
2025-05-21 10:44:41.545 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/favicon.ico - -
2025-05-21 10:44:41.548 +07:00 [INF] Sending file. Request path: '/favicon.ico'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\favicon.ico'
2025-05-21 10:44:41.550 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/favicon.ico - - - 200 6782 image/x-icon 4.9384ms
2025-05-21 10:45:00.158 +07:00 [INF] User profile is available. Using 'C:\Users\eng45\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-21 10:45:00.262 +07:00 [INF] Now listening on: http://localhost:5148
2025-05-21 10:45:00.299 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2025-05-21 10:45:00.301 +07:00 [INF] Hosting environment: Development
2025-05-21 10:45:00.301 +07:00 [INF] Content root path: D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\
2025-05-21 10:45:00.614 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:45:00.790 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:45:00.812 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:45:01.537 +07:00 [WRN] No store type was specified for the decimal property 'AlertValue' on entity type 'AlertHistory'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.547 +07:00 [WRN] No store type was specified for the decimal property 'MaxValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.548 +07:00 [WRN] No store type was specified for the decimal property 'MinValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.551 +07:00 [WRN] No store type was specified for the decimal property 'WarningMaxValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.553 +07:00 [WRN] No store type was specified for the decimal property 'WarningMinValue' on entity type 'AlertThreshold'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.555 +07:00 [WRN] No store type was specified for the decimal property 'HighAlertThreshold' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.557 +07:00 [WRN] No store type was specified for the decimal property 'LowAlertThreshold' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.560 +07:00 [WRN] No store type was specified for the decimal property 'MaxValidValue' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.563 +07:00 [WRN] No store type was specified for the decimal property 'MinValidValue' on entity type 'SensorConfig'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-05-21 10:45:01.736 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:45:02.476 +07:00 [INF] Executed DbCommand (47ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:45:02.598 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:45:02.685 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:45:06.446 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:45:06.510 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:45:06.635 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:45:06.833 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:45:06.849 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:45:06.906 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:45:06.913 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:45:06.921 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:45:07.131 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:45:07.144 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:45:07.151 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:45:07.159 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:45:07.292 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:45:07.319 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:45:07.506 +07:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:45:07.591 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:45:07.836 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:45:07.847 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:45:07.855 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:45:07.861 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:45:07.868 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:45:08.207 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:45:08.232 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:45:08.290 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:45:08.432 +07:00 [INF] Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:09.031 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:45:09.043 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:45:09.085 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-05-21 10:45:09.110 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:45:09.220 +07:00 [INF] Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:09.250 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:45:09.272 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:45:09.564 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:45:09.599 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:45:09.628 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:45:09.805 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:45:09.836 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:45:09.861 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:45:10.013 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:45:10.065 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:45:10.175 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:45:10.281 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:45:10.712 +07:00 [INF] Executed ViewResult - view Index executed in 7996.4024ms.
2025-05-21 10:45:10.722 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 9907.7645ms
2025-05-21 10:45:10.725 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:45:10.753 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 10142.8620ms
2025-05-21 10:45:10.793 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:45:10.793 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:45:10.796 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:45:10.804 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 7.6388ms
2025-05-21 10:45:10.806 +07:00 [INF] The file /js/cleanroom-monitoring.js was not modified
2025-05-21 10:45:10.808 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 304 - application/javascript 15.6734ms
2025-05-21 10:45:10.871 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 77.9628ms
2025-05-21 10:45:10.947 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:45:10.958 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:45:10.970 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:45:10.986 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:45:11.006 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:45:11.087 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:45:11.107 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:11.142 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:45:11.155 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:45:11.166 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:11.199 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:45:11.207 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:45:11.217 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:11.243 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:45:11.252 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:45:11.284 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 312.1714ms
2025-05-21 10:45:11.286 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:45:11.287 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 340.3880ms
2025-05-21 10:45:41.155 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:45:41.171 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:45:41.174 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:45:41.235 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:45:41.242 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:45:41.297 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:45:41.306 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:41.334 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:45:41.339 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:45:41.347 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:41.364 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:45:41.368 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:45:41.373 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:45:41.384 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:45:41.386 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:45:41.387 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 207.1267ms
2025-05-21 10:45:41.388 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:45:41.389 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 233.8642ms
2025-05-21 10:46:02.219 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:46:02.228 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:02.232 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:46:02.235 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:02.239 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:46:02.244 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:46:02.256 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:02.615 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:46:02.630 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:02.646 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:46:02.652 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:46:02.656 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:02.659 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:46:02.662 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:46:02.666 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:46:02.672 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:46:02.675 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:46:02.679 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:46:02.683 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:46:02.687 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:02.690 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:46:02.849 +07:00 [INF] Executed DbCommand (157ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:46:02.897 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:46:02.908 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:46:02.913 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:46:02.918 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:46:02.922 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:46:02.925 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:46:02.945 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:46:02.951 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:46:02.958 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:03.015 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:03.025 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:46:03.028 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:46:03.037 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:46:03.106 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:03.110 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:03.116 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:46:03.176 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:03.215 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:03.248 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:03.273 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:03.291 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:03.304 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:03.312 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:46:03.343 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:03.371 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:03.430 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:46:03.452 +07:00 [INF] Executed ViewResult - view Index executed in 1193.9656ms.
2025-05-21 10:46:03.453 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 1218.9305ms
2025-05-21 10:46:03.454 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:03.455 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 1236.0698ms
2025-05-21 10:46:03.549 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:46:03.551 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:46:03.551 +07:00 [INF] The file /js/cleanroom-monitoring.js was not modified
2025-05-21 10:46:03.553 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:46:03.553 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 304 - application/javascript 4.3072ms
2025-05-21 10:46:03.557 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 4.3500ms
2025-05-21 10:46:03.574 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 22.9096ms
2025-05-21 10:46:03.661 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:46:03.663 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:03.670 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:46:03.672 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:03.678 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:03.730 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:46:03.739 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:03.763 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:03.770 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:46:03.777 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:03.798 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:03.813 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:03.825 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:03.837 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:03.839 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:46:03.843 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 171.9682ms
2025-05-21 10:46:03.844 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:03.845 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 184.3470ms
2025-05-21 10:46:08.374 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:46:08.378 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:08.379 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:46:08.381 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:08.388 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:46:08.398 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:46:08.415 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:08.417 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:46:08.431 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:08.436 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:46:08.440 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:46:08.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:08.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:46:08.450 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:46:08.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:46:08.459 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:46:08.462 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:46:08.465 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:46:08.468 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:46:08.471 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:08.474 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:46:08.639 +07:00 [INF] Executed DbCommand (163ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:46:08.672 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:46:08.679 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:46:08.684 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:46:08.687 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:46:08.691 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:46:08.694 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:46:08.699 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:46:08.703 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:46:08.710 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:08.765 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:08.775 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:46:08.778 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:46:08.786 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:46:08.852 +07:00 [INF] Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:08.857 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:08.863 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:46:08.891 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:08.915 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:08.932 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:08.952 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:08.968 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:08.983 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:08.989 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:46:09.012 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:09.035 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:09.091 +07:00 [INF] Executed DbCommand (31ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:46:09.108 +07:00 [INF] Executed ViewResult - view Index executed in 690.5119ms.
2025-05-21 10:46:09.109 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 728.8127ms
2025-05-21 10:46:09.110 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:09.111 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 737.2542ms
2025-05-21 10:46:09.180 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:46:09.182 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:46:09.186 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 3.7550ms
2025-05-21 10:46:09.189 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 9.5741ms
2025-05-21 10:46:09.218 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:46:09.223 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:09.224 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:46:09.227 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:09.232 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:09.283 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:46:09.292 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:09.309 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:09.316 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:46:09.325 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:09.341 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:09.346 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:09.353 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:09.365 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:09.367 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:46:09.368 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 141.9808ms
2025-05-21 10:46:09.369 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:09.370 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 152.0024ms
2025-05-21 10:46:11.156 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:46:11.159 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:11.160 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:46:11.161 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:11.165 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:46:11.172 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:46:11.182 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:11.185 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:46:11.198 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:11.202 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:46:11.205 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:46:11.207 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:11.210 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:46:11.212 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:46:11.215 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:46:11.221 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:46:11.224 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:46:11.228 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:46:11.231 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:46:11.235 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:11.239 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:46:11.413 +07:00 [INF] Executed DbCommand (172ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:46:11.451 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:46:11.457 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:46:11.462 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:46:11.465 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:46:11.468 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:46:11.472 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:46:11.475 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:46:11.479 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:46:11.486 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:11.540 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:11.549 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:46:11.552 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:46:11.560 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:46:11.625 +07:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:11.630 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:11.637 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:46:11.666 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:11.689 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:11.715 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:11.748 +07:00 [INF] Executed DbCommand (26ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:11.768 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:11.782 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:11.787 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:46:11.812 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:11.836 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:11.896 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:46:11.910 +07:00 [INF] Executed ViewResult - view Index executed in 725.8851ms.
2025-05-21 10:46:11.911 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 750.5634ms
2025-05-21 10:46:11.912 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:11.913 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 757.0728ms
2025-05-21 10:46:11.982 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:46:11.983 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:46:11.985 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 2.1858ms
2025-05-21 10:46:11.988 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.5679ms
2025-05-21 10:46:12.009 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:46:12.010 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:12.011 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:46:12.013 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:12.018 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:12.063 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:46:12.072 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:12.091 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:12.097 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:46:12.105 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:12.120 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:12.125 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:12.146 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:12.158 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:12.160 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:46:12.161 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 148.727ms
2025-05-21 10:46:12.163 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:12.164 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 155.0553ms
2025-05-21 10:46:20.733 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:46:20.740 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:20.740 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:46:20.742 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:20.745 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:46:20.749 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:46:20.759 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:20.761 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:46:20.763 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:20.766 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:46:20.770 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:46:20.772 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:20.775 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:46:20.778 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:46:20.781 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:46:20.786 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:46:20.789 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:46:20.792 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:46:20.796 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:46:20.801 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:20.804 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:46:20.965 +07:00 [INF] Executed DbCommand (159ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:46:21.013 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:46:21.021 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:46:21.026 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:46:21.031 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:46:21.036 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:46:21.040 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:46:21.044 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:46:21.049 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:46:21.056 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:21.109 +07:00 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:21.119 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:46:21.122 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:46:21.131 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:46:21.198 +07:00 [INF] Executed DbCommand (58ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:21.204 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:21.214 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:46:21.247 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:21.273 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:21.289 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:21.310 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:21.326 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:21.338 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:21.343 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:46:21.365 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:21.387 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:21.445 +07:00 [INF] Executed DbCommand (32ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:46:21.459 +07:00 [INF] Executed ViewResult - view Index executed in 698.5642ms.
2025-05-21 10:46:21.460 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 718.6193ms
2025-05-21 10:46:21.461 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:21.462 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 729.2846ms
2025-05-21 10:46:21.537 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:46:21.539 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:46:21.539 +07:00 [INF] The file /js/cleanroom-monitoring.js was not modified
2025-05-21 10:46:21.541 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:46:21.541 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 304 - application/javascript 4.7487ms
2025-05-21 10:46:21.543 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.3558ms
2025-05-21 10:46:21.544 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 4.9699ms
2025-05-21 10:46:21.569 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:46:21.571 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:21.571 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:46:21.573 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:21.578 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:21.624 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:46:21.633 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:21.653 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:21.658 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:46:21.664 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:21.679 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:21.683 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:21.689 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:21.698 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:21.701 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:46:21.702 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 129.1555ms
2025-05-21 10:46:21.703 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:21.704 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 134.5096ms
2025-05-21 10:46:23.902 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:46:23.905 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:23.906 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:46:23.907 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:23.911 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:46:23.915 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:46:23.925 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:23.927 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:46:23.929 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:46:23.934 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:46:23.937 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:46:23.940 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:23.943 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:46:23.946 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:46:23.950 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:46:23.955 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:46:23.958 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:46:23.961 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:46:23.965 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:46:23.968 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:23.971 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:46:24.131 +07:00 [INF] Executed DbCommand (159ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:46:24.181 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:46:24.188 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:46:24.192 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:46:24.196 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:46:24.202 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:46:24.205 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:46:24.209 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:46:24.213 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:46:24.222 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:24.278 +07:00 [INF] Executed DbCommand (51ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:24.287 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:46:24.290 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:46:24.297 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:46:24.369 +07:00 [INF] Executed DbCommand (62ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:24.373 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:46:24.378 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:46:24.405 +07:00 [INF] Executed DbCommand (22ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:24.430 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:24.450 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:46:24.472 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:24.490 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:24.502 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:46:24.507 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:46:24.529 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:24.553 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:24.616 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:46:24.632 +07:00 [INF] Executed ViewResult - view Index executed in 705.1255ms.
2025-05-21 10:46:24.633 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 725.9243ms
2025-05-21 10:46:24.634 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:46:24.635 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 733.2872ms
2025-05-21 10:46:24.710 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:46:24.712 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:46:24.714 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.6608ms
2025-05-21 10:46:24.716 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 5.5963ms
2025-05-21 10:46:24.737 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:46:24.738 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:24.739 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:46:24.741 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:24.747 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:24.793 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:46:24.804 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:24.822 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:24.827 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:46:24.834 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:24.848 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:24.853 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:24.858 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:24.871 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:24.875 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:46:24.876 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 135.7057ms
2025-05-21 10:46:24.878 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:24.879 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 141.2956ms
2025-05-21 10:46:54.742 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:46:54.745 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:54.745 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:46:54.747 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:46:54.752 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:46:54.781 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:46:54.788 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:54.802 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:54.807 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:46:54.814 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:54.828 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:54.832 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:46:54.838 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:46:54.849 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:46:54.851 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:46:54.852 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 105.4209ms
2025-05-21 10:46:54.853 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:46:54.854 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 111.0586ms
2025-05-21 10:47:24.750 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:47:24.756 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:47:24.756 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:47:24.759 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:47:24.764 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:47:24.814 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:47:24.821 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:24.834 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:47:24.839 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:47:24.850 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:24.863 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:47:24.867 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:47:24.872 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:24.882 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:47:24.884 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:47:24.885 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 126.5649ms
2025-05-21 10:47:24.885 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:47:24.886 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 135.8165ms
2025-05-21 10:47:39.323 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/ - -
2025-05-21 10:47:39.331 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:47:39.333 +07:00 [INF] Route matched with {action = "Index", controller = "Dashboard", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Index(System.Nullable`1[System.Int32], System.Nullable`1[System.Int32]) on controller CleanroomMonitoring.Web.Controllers.DashboardController (CleanroomMonitoring.Web).
2025-05-21 10:47:39.335 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:47:39.339 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[FactoryID], [f].[COMMENT], [f].[CreatedByUserID], [f].[CreatedDate], [f].[FactoryName], [f].[LastModifiedByUserID], [f].[LastModifiedDate], [f].[Location]
FROM [Factory] AS [f]
ORDER BY [f].[FactoryName]
2025-05-21 10:47:39.382 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
ORDER BY [c].[RoomName]
2025-05-21 10:47:39.394 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:47:39.396 +07:00 [INF] Executing ViewResult, running view Index.
2025-05-21 10:47:39.400 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
2025-05-21 10:47:39.405 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[CleanRoom] AS [c]
WHERE EXISTS (
    SELECT 1
    FROM [dbo].[SensorInfo] AS [s]
    WHERE ([c].[RoomID] = [s].[RoomID]) AND ([s].[IsActive] = CAST(1 AS bit)))
2025-05-21 10:47:39.408 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
2025-05-21 10:47:39.411 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:47:39.414 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Temperature%'
2025-05-21 10:47:39.419 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Humidity%'
2025-05-21 10:47:39.422 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE [s0].[TypeName] LIKE N'%Pressure%'
2025-05-21 10:47:39.427 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__AddMonths_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__AddMonths_0
2025-05-21 10:47:39.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] IS NULL
2025-05-21 10:47:39.437 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__today_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[AlertTime] >= @__today_0
2025-05-21 10:47:39.441 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[AlertType] = N'Critical') AND ([a].[AlertTime] IS NULL)
2025-05-21 10:47:39.443 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorInfo] AS [s]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:47:39.446 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[IsConnected] = CAST(1 AS bit)
2025-05-21 10:47:39.630 +07:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [s].[ReadingID], [s].[IsValid], [s].[ReadingTime], [s].[ReadingValue], [s].[SensorInfoID]
FROM [dbo].[SensorReading] AS [s]
ORDER BY [s].[ReadingTime] DESC
2025-05-21 10:47:39.667 +07:00 [INF] Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
WHERE [s].[ReadingTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE())
2025-05-21 10:47:39.673 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[AlertID], [s].[SensorName], [c].[RoomName], COALESCE([s].[RoomID], 0), [t].[AlertTime], [t].[AlertType], [t].[AlertMessage], [t].[AlertValue], [s0].[TypeName], [s0].[Unit], CASE
    WHEN [t].[AlertTime] IS NOT NULL THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END, GETDATE(), [t].[SensorInfoID]
FROM (
    SELECT TOP(@__p_0) [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[SensorInfoID], CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END AS [c]
    FROM [dbo].[AlertHistory] AS [a]
    WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertTime] >= DATEADD(hour, CAST(-24.0E0 AS int), GETDATE()))
    ORDER BY CASE
        WHEN [a].[AlertType] = N'Critical' THEN 0
        WHEN [a].[AlertType] = N'Warning' THEN 1
        ELSE 2
    END DESC, [a].[AlertTime] DESC
) AS [t]
INNER JOIN [dbo].[SensorInfo] AS [s] ON [t].[SensorInfoID] = [s].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
ORDER BY [t].[c] DESC, [t].[AlertTime] DESC
2025-05-21 10:47:39.677 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE [a].[IsHandled] = CAST(0 AS bit)
2025-05-21 10:47:39.681 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Critical')
2025-05-21 10:47:39.684 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Warning')
2025-05-21 10:47:39.688 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[IsHandled] = CAST(0 AS bit)) AND ([a].[AlertType] = N'Info')
2025-05-21 10:47:39.692 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__area_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__area_0 LIKE N'') OR (CHARINDEX(@__area_0, [c].[Area]) > 0)
2025-05-21 10:47:39.695 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
2025-05-21 10:47:39.703 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[LocationID], [s].[COMMENT], [s].[CreatedByUserID], [s].[CreatedDate], [s].[IsActive], [s].[LastModifiedByUserID], [s].[LastModifiedDate], [s].[LocationName], [s].[OverlayDirection], [s].[SensorInfoID], [s].[ToaDoX], [s].[ToaDoY], [s].[XCoordinate], [s].[YCoordinate], [s].[ZCoordinate]
FROM [SensorLocation] AS [s]
WHERE ([s].[SensorInfoID] IS NOT NULL) AND [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:47:39.768 +07:00 [INF] Executed DbCommand (60ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:39.777 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:47:39.781 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:47:39.789 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (2, 3, 4, 5, 44, 45, 46, 48, 49, 51, 52)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:47:39.874 +07:00 [INF] Executed DbCommand (76ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:39.879 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126)
2025-05-21 10:47:39.886 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:47:39.913 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:47:39.936 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:47:39.964 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__interval_2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_2
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:47:39.987 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:47:40.003 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:47:40.015 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:47:40.020 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
2025-05-21 10:47:40.046 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorConnectionStatusId], [s].[DisconnectionCount], [s].[IsConnected], [s].[LastConnectionTime], [s].[LastDisconnectionTime], [s].[LastIssueDescription], [s].[LastIssueType], [s].[SensorInfoID]
FROM [dbo].[SensorConnectionStatus] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:47:40.071 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[FlagID], [s].[AbnormalValueDescription], [s].[AbnormalValueTime], [s].[AbnormalValueType], [s].[DisconnectsInLastDay], [s].[HasAbnormalValue], [s].[IsFlickering], [s].[LastHealthCheckTime], [s].[NormalizedTime], [s].[RecordsInLastDay], [s].[RecordsInLastHour], [s].[SensorInfoID]
FROM [dbo].[SensorFlags] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:47:40.129 +07:00 [INF] Executed DbCommand (30ms) [Parameters=[@__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(@__p_1) [s].[HealthCheckID], [s].[CheckTime], [s].[Description], [s].[IssueType], [s].[SensorInfoID], [s].[Status]
FROM [dbo].[SensorHealthCheckHistory] AS [s]
WHERE [s].[SensorInfoID] IN (103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
ORDER BY [s].[CheckTime] DESC
2025-05-21 10:47:40.144 +07:00 [INF] Executed ViewResult - view Index executed in 748.0775ms.
2025-05-21 10:47:40.147 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web) in 812.667ms
2025-05-21 10:47:40.148 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.DashboardController.Index (CleanroomMonitoring.Web)'
2025-05-21 10:47:40.149 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/ - - - 200 - text/html;+charset=utf-8 826.7797ms
2025-05-21 10:47:40.214 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - -
2025-05-21 10:47:40.243 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_vs/browserLink - -
2025-05-21 10:47:40.247 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - -
2025-05-21 10:47:40.248 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_framework/aspnetcore-browser-refresh.js - - - 200 16531 application/javascript;+charset=utf-8 1.6504ms
2025-05-21 10:47:40.249 +07:00 [INF] Sending file. Request path: '/js/cleanroom-monitoring.js'. Physical path: 'D:\Code Asahi Project\http172.16.33.1238080svnMonitoringCleanRoom\CleanRoom.Web\CleanRoom.Web\wwwroot\js\cleanroom-monitoring.js'
2025-05-21 10:47:40.249 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 6.0658ms
2025-05-21 10:47:40.252 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/js/cleanroom-monitoring.js - - - 200 15369 application/javascript 37.1879ms
2025-05-21 10:47:40.286 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:47:40.288 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:47:40.289 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:47:40.292 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:47:40.300 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:47:40.358 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:47:40.368 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:40.387 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:47:40.393 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:47:40.401 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:40.416 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:47:40.421 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:47:40.428 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:47:40.440 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:47:40.442 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:47:40.443 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 152.4666ms
2025-05-21 10:47:40.444 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:47:40.447 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 160.9388ms
2025-05-21 10:48:10.285 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:48:10.287 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:48:10.288 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:48:10.289 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:10.294 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:48:10.328 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:48:10.336 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:48:10.350 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:48:10.354 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:48:10.361 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:48:10.375 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:48:10.379 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:48:10.385 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:48:10.395 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:48:10.398 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:48:10.399 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 110.0162ms
2025-05-21 10:48:10.400 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:48:10.401 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 116.0616ms
2025-05-21 10:48:22.740 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=1FP1 - -
2025-05-21 10:48:22.742 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:22.744 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:22.757 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:22.760 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:22.783 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:22.803 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:22.821 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:22.841 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:22.858 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:22.871 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:22.875 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 130.5453ms
2025-05-21 10:48:22.876 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:22.877 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=1FP1 - - - 200 - text/html;+charset=utf-8 137.2276ms
2025-05-21 10:48:24.564 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=2FP1 - -
2025-05-21 10:48:24.567 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:24.567 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:24.569 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:24.570 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:24.583 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:24.593 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:24.599 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:24.609 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:24.617 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:24.622 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:24.625 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 56.1646ms
2025-05-21 10:48:24.625 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:24.626 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=2FP1 - - - 200 - text/html;+charset=utf-8 62.1753ms
2025-05-21 10:48:25.589 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=2FP2 - -
2025-05-21 10:48:25.591 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:25.592 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:25.595 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:25.596 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:25.607 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:25.619 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:25.625 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:25.635 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:25.643 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:25.649 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:25.651 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 56.8079ms
2025-05-21 10:48:25.652 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:25.653 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=2FP2 - - - 200 - text/html;+charset=utf-8 64.1979ms
2025-05-21 10:48:26.521 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=2FP2 - -
2025-05-21 10:48:26.523 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:26.524 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:26.525 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:26.526 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:26.542 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:26.556 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:26.563 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:26.573 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:26.581 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:26.587 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:26.589 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 64.1497ms
2025-05-21 10:48:26.590 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:26.591 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=2FP2 - - - 200 - text/html;+charset=utf-8 69.1455ms
2025-05-21 10:48:27.553 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=3FP1 - -
2025-05-21 10:48:27.555 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:27.556 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:27.557 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:27.558 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:27.568 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:27.577 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:27.585 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:27.595 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:27.604 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:27.608 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:27.611 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 54.1959ms
2025-05-21 10:48:27.612 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:27.612 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=3FP1 - - - 200 - text/html;+charset=utf-8 59.1633ms
2025-05-21 10:48:28.218 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=3FP2 - -
2025-05-21 10:48:28.221 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:28.221 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:28.223 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:28.224 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:28.241 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:28.253 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:28.259 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:28.272 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:28.280 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:28.286 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:28.289 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 66.0537ms
2025-05-21 10:48:28.290 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:28.291 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=3FP2 - - - 200 - text/html;+charset=utf-8 72.4694ms
2025-05-21 10:48:29.324 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=2h&interval=15&area=3FP2 - -
2025-05-21 10:48:29.326 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:29.327 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:29.328 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:29.329 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:29.339 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:29.346 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:29.354 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:29.361 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:29.367 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:29.373 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:29.375 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 47.456ms
2025-05-21 10:48:29.376 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:29.377 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=2h&interval=15&area=3FP2 - - - 200 - text/html;+charset=utf-8 52.8512ms
2025-05-21 10:48:29.993 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=8h&interval=15&area=3FP2 - -
2025-05-21 10:48:29.995 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:29.996 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:29.999 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:30.000 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:30.007 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:30.014 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:30.020 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:30.026 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:30.032 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:30.037 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:30.039 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 40.6582ms
2025-05-21 10:48:30.040 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:30.041 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=8h&interval=15&area=3FP2 - - - 200 - text/html;+charset=utf-8 47.2382ms
2025-05-21 10:48:31.193 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=3FP2 - -
2025-05-21 10:48:31.196 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:31.196 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:31.198 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:31.199 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:31.214 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:31.225 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:31.229 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:31.241 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:31.248 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:31.253 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:31.256 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 57.7694ms
2025-05-21 10:48:31.257 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:31.257 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=24h&interval=15&area=3FP2 - - - 200 - text/html;+charset=utf-8 64.0518ms
2025-05-21 10:48:32.057 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=7d&interval=15&area=3FP2 - -
2025-05-21 10:48:32.059 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:32.060 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:32.061 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:32.063 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:32.122 +07:00 [INF] Executed DbCommand (55ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:32.179 +07:00 [INF] Executed DbCommand (53ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:32.197 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:32.254 +07:00 [INF] Executed DbCommand (36ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:32.293 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:32.300 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:32.311 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 250.0256ms
2025-05-21 10:48:32.313 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:32.318 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.FlushInternal(Boolean flushEncoder)
   at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.Write(String value)
   at Microsoft.AspNetCore.Html.HtmlString.WriteTo(TextWriter writer, HtmlEncoder encoder)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.WriteToAsync(TextWriter writer, HtmlEncoder encoder)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor.ExecuteAsync(ActionContext context, ViewComponentResult result)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor.ExecuteAsync(ActionContext context, ViewComponentResult result)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeResultFilters>g__Awaited|28_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-21 10:48:32.359 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=7d&interval=15&area=3FP2 - - - 500 - text/plain;+charset=utf-8 301.6481ms
2025-05-21 10:48:33.067 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=30d&interval=15&area=3FP2 - -
2025-05-21 10:48:33.069 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:33.070 +07:00 [INF] Route matched with {action = "SensorReadingsChart", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult SensorReadingsChart(System.String, Int32, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:48:33.071 +07:00 [INF] Executing ViewComponentResult, running SensorReadingsChart.
2025-05-21 10:48:33.073 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:33.194 +07:00 [INF] Executed DbCommand (118ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:33.319 +07:00 [INF] Executed DbCommand (119ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:33.327 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50), @__interval_3='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT MIN([s].[ReadingTime]) AS [Time], AVG([s].[ReadingValue]) AS [Value]
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE (([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')
GROUP BY DATEDIFF(minute, @__fromTime_0, [s].[ReadingTime]) / @__interval_3
ORDER BY MIN([s].[ReadingTime])
2025-05-21 10:48:33.424 +07:00 [INF] Executed DbCommand (75ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Temperature%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:33.508 +07:00 [INF] Executed DbCommand (73ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Humidity%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:33.536 +07:00 [INF] Executed DbCommand (23ms) [Parameters=[@__fromTime_0='?' (DbType = DateTime2), @__area_1='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [dbo].[SensorReading] AS [s]
INNER JOIN [dbo].[SensorInfo] AS [s0] ON [s].[SensorInfoID] = [s0].[SensorInfoID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s0].[RoomID] = [c].[RoomID]
LEFT JOIN [dbo].[SensorType] AS [s1] ON [s0].[SensorTypeID] = [s1].[SensorTypeID]
WHERE ((([s].[ReadingTime] >= @__fromTime_0) AND ([c].[Area] = @__area_1)) AND ([s1].[TypeName] LIKE N'%Pressure%')) AND ([s].[IsValid] = CAST(0 AS bit))
2025-05-21 10:48:33.542 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web) in 470.5813ms
2025-05-21 10:48:33.543 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.SensorReadingsChart (CleanroomMonitoring.Web)'
2025-05-21 10:48:33.544 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Synchronous operations are disallowed. Call WriteAsync or set AllowSynchronousIO to true instead.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.FlushInternal(Boolean flushEncoder)
   at Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter.Write(String value)
   at Microsoft.AspNetCore.Html.HtmlString.WriteTo(TextWriter writer, HtmlEncoder encoder)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.WriteToAsync(TextWriter writer, HtmlEncoder encoder)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor.ExecuteAsync(ActionContext context, ViewComponentResult result)
   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor.ExecuteAsync(ActionContext context, ViewComponentResult result)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResultFilterAsync>g__Awaited|30_0[TFilter,TFilterAsync](ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResultExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeResultFilters>g__Awaited|28_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Localization.RequestLocalizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2025-05-21 10:48:33.552 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/SensorReadingsChart?range=30d&interval=15&area=3FP2 - - - 500 - text/plain;+charset=utf-8 484.6443ms
2025-05-21 10:48:40.287 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:48:40.290 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:48:40.291 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:48:40.293 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:48:40.341 +07:00 [INF] Executed DbCommand (46ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:48:40.374 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:48:40.381 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:48:40.395 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:48:40.399 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:48:40.406 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:48:40.420 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:48:40.425 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:48:40.431 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:48:40.440 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:48:40.442 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:48:40.442 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 149.8928ms
2025-05-21 10:48:40.443 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:48:40.445 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 158.2209ms
2025-05-21 10:49:10.295 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:49:10.297 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:49:10.298 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:49:10.300 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:49:10.352 +07:00 [INF] Executed DbCommand (49ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:49:10.388 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:49:10.394 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:49:10.407 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:49:10.411 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:49:10.417 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:49:10.429 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:49:10.433 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:49:10.438 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:49:10.446 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:49:10.448 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:49:10.449 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 149.5494ms
2025-05-21 10:49:10.450 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:49:10.451 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 156.2338ms
2025-05-21 10:49:40.306 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:49:40.309 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:49:40.310 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:49:40.313 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:49:40.359 +07:00 [INF] Executed DbCommand (44ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:49:40.405 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:49:40.412 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:49:40.425 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:49:40.428 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:49:40.435 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:49:40.449 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:49:40.453 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:49:40.458 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:49:40.469 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:49:40.471 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:49:40.472 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 159.4026ms
2025-05-21 10:49:40.472 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:49:40.473 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 167.0206ms
2025-05-21 10:50:11.166 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:50:11.170 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:50:11.171 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:50:11.174 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:50:11.181 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:50:11.229 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:50:11.237 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:50:11.251 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:50:11.255 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:50:11.261 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:50:11.274 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:50:11.279 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:50:11.284 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:50:11.294 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:50:11.296 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:50:11.297 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 124.2074ms
2025-05-21 10:50:11.298 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:50:11.299 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 132.7327ms
2025-05-21 10:50:41.167 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:50:41.169 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:50:41.170 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:50:41.172 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:50:41.179 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:50:41.265 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:50:41.272 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:50:41.286 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:50:41.290 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:50:41.296 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:50:41.309 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:50:41.314 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:50:41.319 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:50:41.328 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:50:41.330 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:50:41.331 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 160.2795ms
2025-05-21 10:50:41.332 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:50:41.333 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 166.3010ms
2025-05-21 10:51:31.164 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:51:31.167 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:51:31.167 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:51:31.169 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:51:31.174 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:51:31.218 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:51:31.226 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:51:31.242 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:51:31.247 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:51:31.255 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:51:31.269 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:51:31.273 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:51:31.278 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:51:31.289 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:51:31.291 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:51:31.291 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 122.814ms
2025-05-21 10:51:31.292 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:51:31.294 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 129.9030ms
2025-05-21 10:52:31.156 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:52:31.158 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:52:31.159 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:52:31.161 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:52:31.189 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:52:31.230 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:52:31.236 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:52:31.252 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:52:31.256 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:52:31.263 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:52:31.276 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:52:31.280 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:52:31.286 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:52:31.295 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:52:31.297 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:52:31.297 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 137.5874ms
2025-05-21 10:52:31.298 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:52:31.299 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 143.5963ms
2025-05-21 10:52:41.173 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=2F - -
2025-05-21 10:52:41.186 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:52:41.188 +07:00 [INF] Route matched with {action = "GetSensorMap", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSensorMap(System.String, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:52:41.196 +07:00 [INF] Executing ViewComponentResult, running EnhancedSensorMap.
2025-05-21 10:52:41.198 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:52:41.203 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:52:41.207 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:52:41.232 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 53)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:52:41.337 +07:00 [INF] Executed DbCommand (78ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:52:41.346 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234)
2025-05-21 10:52:41.359 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 233, 234) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:52:41.363 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web) in 173.7753ms
2025-05-21 10:52:41.364 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:52:41.365 +07:00 [WRN] Unable to configure Browser Link script injection on the response. 
2025-05-21 10:52:41.366 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=2F - - - 200 - text/html;+charset=utf-8 192.6993ms
2025-05-21 10:53:31.155 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:53:31.156 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:53:31.157 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:53:31.159 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:53:31.230 +07:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:53:31.280 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:53:31.287 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:53:31.301 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:53:31.305 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:53:31.313 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:53:31.327 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:53:31.331 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:53:31.337 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:53:31.347 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:53:31.349 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:53:31.350 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 191.3326ms
2025-05-21 10:53:31.350 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:53:31.351 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 196.6495ms
2025-05-21 10:54:31.162 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:54:31.164 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:54:31.165 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:54:31.167 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:54:31.175 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:54:31.214 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:54:31.222 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:54:31.239 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:54:31.245 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:54:31.254 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:54:31.275 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:54:31.282 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:54:31.288 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:54:31.300 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:54:31.306 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:54:31.307 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 140.6285ms
2025-05-21 10:54:31.308 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:54:31.309 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 147.2324ms
2025-05-21 10:55:31.161 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:55:31.163 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:55:31.164 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:55:31.166 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:55:31.218 +07:00 [INF] Executed DbCommand (50ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:55:31.254 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:55:31.260 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:55:31.273 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:55:31.277 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:55:31.283 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:55:31.296 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:55:31.299 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:55:31.305 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:55:31.318 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:55:31.319 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:55:31.320 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 154.9977ms
2025-05-21 10:55:31.321 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:55:31.322 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 160.8081ms
2025-05-21 10:56:31.161 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:56:31.163 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:56:31.164 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:56:31.166 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:56:31.207 +07:00 [INF] Executed DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:56:31.256 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:56:31.264 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:56:31.277 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:56:31.282 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:56:31.288 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:56:31.303 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:56:31.306 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:56:31.312 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:56:31.322 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:56:31.324 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:56:31.325 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 159.8201ms
2025-05-21 10:56:31.327 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:56:31.328 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 166.2059ms
2025-05-21 10:57:31.172 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - -
2025-05-21 10:57:31.178 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:57:31.181 +07:00 [INF] Route matched with {action = "GetRealTimeData", controller = "SensorDataApi", area = ""}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[CleanroomMonitoring.Web.Controllers.Api.RealTimeData]] GetRealTimeData(Int32) on controller CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController (CleanroomMonitoring.Web).
2025-05-21 10:57:31.186 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:57:31.198 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
WHERE [s].[IsActive] = CAST(1 AS bit)
2025-05-21 10:57:31.235 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231)
2025-05-21 10:57:31.242 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:57:31.254 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:57:31.259 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232)
2025-05-21 10:57:31.265 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:57:31.290 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:57:31.300 +07:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272)
2025-05-21 10:57:31.306 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingID]) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE ([s0].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s0].[IsValid] = CAST(1 AS bit))) AND ([s0].[ReadingTime] > DATEADD(hour, CAST(-1.0E0 AS int), GETDATE()))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:57:31.316 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[ReadingTime], [s].[ReadingValue]
FROM [dbo].[SensorReading] AS [s]
WHERE ([s].[SensorInfoID] IN (233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272) AND ([s].[IsValid] = CAST(1 AS bit))) AND ([s].[ReadingTime] > DATEADD(hour, CAST(-2.0E0 AS int), GETDATE()))
ORDER BY [s].[ReadingTime]
2025-05-21 10:57:31.318 +07:00 [INF] Executing JsonResult, writing value of type 'CleanroomMonitoring.Web.Controllers.Api.RealTimeData'.
2025-05-21 10:57:31.319 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web) in 134.681ms
2025-05-21 10:57:31.320 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.Api.SensorDataApiController.GetRealTimeData (CleanroomMonitoring.Web)'
2025-05-21 10:57:31.321 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/api/SensorDataApi/realtime?roomId=0 - - - 200 - application/json;+charset=utf-8 149.1339ms
2025-05-21 10:57:41.160 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=3F - -
2025-05-21 10:57:41.168 +07:00 [INF] Executing endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:57:41.169 +07:00 [INF] Route matched with {action = "GetSensorMap", controller = "Components", area = ""}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetSensorMap(System.String, System.String) on controller CleanroomMonitoring.Web.Controllers.ComponentsController (CleanroomMonitoring.Web).
2025-05-21 10:57:41.171 +07:00 [INF] Executing ViewComponentResult, running EnhancedSensorMap.
2025-05-21 10:57:41.172 +07:00 [INF] Entity Framework Core 6.0.24 initialized 'dbDataContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.2' with options: None
2025-05-21 10:57:41.177 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__Format_0='?' (Size = 50)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName]
FROM [dbo].[CleanRoom] AS [c]
WHERE (@__Format_0 LIKE N'') OR (CHARINDEX(@__Format_0, [c].[Area]) > 0)
2025-05-21 10:57:41.181 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorTypeID], [s].[Description], [s].[TypeName], [s].[Unit]
FROM [dbo].[SensorType] AS [s]
2025-05-21 10:57:41.193 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[SensorInfoID], [s].[COMMENT], [s].[IpAddress], [s].[IsActive], [s].[ModbusAddress], [s].[Phase], [s].[RoomID], [s].[SensorName], [s].[SensorTypeID], [s0].[SensorTypeID], [s0].[Description], [s0].[TypeName], [s0].[Unit], [c].[RoomID], [c].[Area], [c].[COMMENT], [c].[CleanRoomClass], [c].[CreatedByUserID], [c].[CreatedDate], [c].[Description], [c].[FactoryID], [c].[LastModifiedByUserID], [c].[LastModifiedDate], [c].[RoomName], [s1].[LocationID], [s1].[COMMENT], [s1].[CreatedByUserID], [s1].[CreatedDate], [s1].[IsActive], [s1].[LastModifiedByUserID], [s1].[LastModifiedDate], [s1].[LocationName], [s1].[OverlayDirection], [s1].[SensorInfoID], [s1].[ToaDoX], [s1].[ToaDoY], [s1].[XCoordinate], [s1].[YCoordinate], [s1].[ZCoordinate], [s2].[FlagID], [s2].[AbnormalValueDescription], [s2].[AbnormalValueTime], [s2].[AbnormalValueType], [s2].[DisconnectsInLastDay], [s2].[HasAbnormalValue], [s2].[IsFlickering], [s2].[LastHealthCheckTime], [s2].[NormalizedTime], [s2].[RecordsInLastDay], [s2].[RecordsInLastHour], [s2].[SensorInfoID]
FROM [dbo].[SensorInfo] AS [s]
LEFT JOIN [dbo].[SensorType] AS [s0] ON [s].[SensorTypeID] = [s0].[SensorTypeID]
LEFT JOIN [dbo].[CleanRoom] AS [c] ON [s].[RoomID] = [c].[RoomID]
LEFT JOIN [SensorLocation] AS [s1] ON [s].[SensorInfoID] = [s1].[SensorInfoID]
LEFT JOIN [dbo].[SensorFlags] AS [s2] ON [s].[SensorInfoID] = [s2].[SensorInfoID]
WHERE ([s].[RoomID] IS NOT NULL) AND [s].[RoomID] IN (26, 27, 28, 29, 30, 31, 32, 39, 40, 47, 50)
ORDER BY [s].[SensorInfoID], [s0].[SensorTypeID], [c].[RoomID], [s1].[LocationID]
2025-05-21 10:57:41.270 +07:00 [INF] Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [t0].[ReadingID], [t0].[IsValid], [t0].[ReadingTime], [t0].[ReadingValue], [t0].[SensorInfoID]
FROM (
    SELECT [s].[SensorInfoID]
    FROM [dbo].[SensorReading] AS [s]
    WHERE [s].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([s].[IsValid] = CAST(1 AS bit))
    GROUP BY [s].[SensorInfoID]
) AS [t]
LEFT JOIN (
    SELECT [t1].[ReadingID], [t1].[IsValid], [t1].[ReadingTime], [t1].[ReadingValue], [t1].[SensorInfoID]
    FROM (
        SELECT [s0].[ReadingID], [s0].[IsValid], [s0].[ReadingTime], [s0].[ReadingValue], [s0].[SensorInfoID], ROW_NUMBER() OVER(PARTITION BY [s0].[SensorInfoID] ORDER BY [s0].[ReadingTime] DESC) AS [row]
        FROM [dbo].[SensorReading] AS [s0]
        WHERE [s0].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([s0].[IsValid] = CAST(1 AS bit))
    ) AS [t1]
    WHERE [t1].[row] <= 1
) AS [t0] ON [t].[SensorInfoID] = [t0].[SensorInfoID]
2025-05-21 10:57:41.278 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[ThresholdID], [a].[AlertDelay], [a].[ApprovalDate], [a].[ApprovalStatus], [a].[ApprovedByUserID], [a].[COMMENT], [a].[MaxValue], [a].[MinValue], [a].[SensorInfoID], [a].[UpdatedByUserID], [a].[UpdatedDate], [a].[WarningMaxValue], [a].[WarningMinValue]
FROM [dbo].[AlertThreshold] AS [a]
WHERE [a].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182)
2025-05-21 10:57:41.284 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[AlertID], [a].[AlertMessage], [a].[AlertTime], [a].[AlertType], [a].[AlertValue], [a].[IsHandled], [a].[SensorInfoID]
FROM [dbo].[AlertHistory] AS [a]
WHERE ([a].[SensorInfoID] IN (159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182) AND ([a].[IsHandled] = CAST(0 AS bit))) AND ([a].[AlertTime] > DATEADD(day, CAST(-1.0E0 AS int), GETDATE()))
2025-05-21 10:57:41.289 +07:00 [INF] Executed action CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web) in 118.1754ms
2025-05-21 10:57:41.291 +07:00 [INF] Executed endpoint 'CleanroomMonitoring.Web.Controllers.ComponentsController.GetSensorMap (CleanroomMonitoring.Web)'
2025-05-21 10:57:41.293 +07:00 [WRN] Unable to configure Browser Link script injection on the response. 
2025-05-21 10:57:41.294 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/Components/GetSensorMap?area=3F - - - 200 - text/html;+charset=utf-8 133.1645ms
2025-05-21 10:57:41.301 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5148/img/layout/3FP1.png - -
2025-05-21 10:57:41.306 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5148/img/layout/3FP1.png - - - 404 0 - 4.7952ms
