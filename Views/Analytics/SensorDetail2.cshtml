@using CleanroomMonitoring.Web.ViewModels
@model CleanroomMonitoring.Web.ViewModels.SensorDetailViewModel
@{
    ViewData["Title"] = $"Sensor Detail - {Model.SensorName}";
}

<div class="container-fluid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Analytics" asp-action="Index">Analytics</a></li>
            <li class="breadcrumb-item active" aria-current="page">Sensor Detail</li>
        </ol>
    </nav>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@Model.SensorName Details</h1>
        <div>
            <a asp-controller="Analytics" asp-action="Index"
               asp-route-roomId="@Model.RoomID"
               asp-route-startDate="@Model.StartDate.ToString("yyyy-MM-dd")"
               asp-route-endDate="@Model.EndDate.ToString("yyyy-MM-dd")"
               class="btn btn-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to Analytics
            </a>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-info-circle me-1"></i>
                    Sensor Information
                </div>
                <div class="card-body">
                    <table class="table table-sm">
                        <tbody>
                            <tr>
                                <th>Sensor Name:</th>
                                <td>@Model.SensorName</td>
                            </tr>
                            <tr>
                                <th>Sensor Type:</th>
                                <td>@Model.SensorTypeName</td>
                            </tr>
                            <tr>
                                <th>Unit:</th>
                                <td>@Model.Unit</td>
                            </tr>
                            <tr>
                                <th>Room:</th>
                                <td>@Model.RoomName</td>
                            </tr>
                            <tr>
                                <th>Date Range:</th>
                                <td>@Model.StartDate.ToString("yyyy-MM-dd") to @Model.EndDate.ToString("yyyy-MM-dd")</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-chart-bar me-1"></i>
                    Statistics
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="stat-card text-center p-3 rounded bg-light mb-3">
                                <h3 class="text-primary">@Model.MinValue.ToString("F1") @Model.Unit</h3>
                                <p class="text-muted mb-0">Minimum Value</p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card text-center p-3 rounded bg-light mb-3">
                                <h3 class="text-primary">@Model.MaxValue.ToString("F1") @Model.Unit</h3>
                                <p class="text-muted mb-0">Maximum Value</p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card text-center p-3 rounded bg-light mb-3">
                                <h3 class="text-primary">@Model.AvgValue.ToString("F1") @Model.Unit</h3>
                                <p class="text-muted mb-0">Average Value</p>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="stat-card text-center p-3 rounded bg-light">
                                <h3 class="text-success">@Model.ValidReadings</h3>
                                <p class="text-muted mb-0">Valid Readings</p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card text-center p-3 rounded bg-light">
                                <h3 class="text-danger">@Model.InvalidReadings</h3>
                                <p class="text-muted mb-0">Invalid Readings</p>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card text-center p-3 rounded bg-light">
                                <h3 class="text-info">@(Model.ValidReadings + Model.InvalidReadings)</h3>
                                <p class="text-muted mb-0">Total Readings</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Form -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-filter me-1"></i>
            Adjust Date Range
        </div>
        <div class="card-body">
            <form asp-controller="Analytics" asp-action="SensorDetail" method="get" class="row g-3">
                <input type="hidden" asp-for="SensorInfoID" />
                <div class="col-md-5">
                    <label asp-for="StartDate" class="form-label">Start Date</label>
                    <input asp-for="StartDate" type="date" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-5">
                    <label asp-for="EndDate" class="form-label">End Date</label>
                    <input asp-for="EndDate" type="date" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">Apply</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Time Series Chart -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-chart-line me-1"></i>
            Reading History
        </div>
        <div class="card-body">
            <canvas id="timeSeriesChart" height="300"></canvas>
        </div>
    </div>

    <!-- Readings Table -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table me-1"></i>
            Reading Data
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="readingsTable">
                    <thead>
                        <tr>
                            <th>Timestamp</th>
                            <th>Value (@Model.Unit)</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var point in Model.ChartData.OrderByDescending(d => d.Timestamp)) {
                            <tr>
                                <td>@point.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                <td>@point.Value.ToString("F1")</td>
                                <td>
                                    @if (point is OutlierDataPoint outlier && !string.IsNullOrEmpty(outlier.Severity)) {
                                        <span class="badge rounded-pill bg-@(outlier.Severity == "Severe" ? "danger" : outlier.Severity == "Moderate" ? "warning" : "info")">
                                            @outlier.Severity Outlier
                                        </span>
                                    }
                                    else {
                                        <span class="badge rounded-pill bg-success">Normal</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Time Series Chart
            var ctx = document.getElementById('timeSeriesChart').getContext('2d');
            var chartData = @Html.Raw(Json.Serialize(Model.ChartData));

            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: chartData.map(function(d) {
                        return new Date(d.timestamp).toLocaleString();
                    }),
                    datasets: [{
                        label: '@Model.SensorName (@Model.SensorTypeName)',
                        data: chartData.map(function(d) { return d.value; }),
                        borderColor: 'rgba(54, 162, 235, 1)',
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        tension: 0.1,
                        pointRadius: 2,
                        pointHoverRadius: 5
                    }, {
                        label: 'Average',
                        data: chartData.map(function() { return @Model.AvgValue; }),
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 2,
                        borderDash: [5, 5],
                        fill: false,
                        pointRadius: 0
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: 'Sensor Reading History'
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                            callbacks: {
                                label: function(context) {
                                    return context.dataset.label + ': ' + context.parsed.y + ' @Model.Unit';
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            title: {
                                display: true,
                                text: '@Model.Unit'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Time'
                            },
                            ticks: {
                                maxTicksLimit: 15,
                                maxRotation: 45,
                                minRotation: 45
                            }
                        }
                    }
                }
            });

            // Initialize DataTable
            $('#readingsTable').DataTable({
                order: [[0, 'desc']],
                pageLength: 25
            });
        });
    </script>
}