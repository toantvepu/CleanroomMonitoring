@model CleanroomMonitoring.Web.ViewModels.AnalyticsViewModel
@{
    ViewData["Title"] = "Cleanroom Analytics";
}

<div class="container-fluid">
    <h1 class="mt-4">Cleanroom Analytics</h1>

    <!-- Filter Form -->
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-filter me-1"></i>
            Filter Options
        </div>
        <div class="card-body">
            <form asp-controller="Analytics" asp-action="Index" method="get" class="row g-3">
                <div class="col-md-4">
                    <label asp-for="SelectedRoomId" class="form-label">Cleanroom</label>
                    <select asp-for="SelectedRoomId" class="form-select"
                    asp-items="@(new SelectList(Model.CleanRooms, "RoomID", "RoomName"))">
                        <option value="">-- Select Cleanroom --</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label asp-for="StartDate" class="form-label">Start Date</label>
                    <input asp-for="StartDate" type="date" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-3">
                    <label asp-for="EndDate" class="form-label">End Date</label>
                    <input asp-for="EndDate" type="date" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-dd")">
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100">Apply</button>
                </div>
            </form>
        </div>
    </div>

    @if (Model.SelectedRoomId.HasValue) {
        <!-- Room Overview -->
        <div class="row">
            <div class="col-xl-3 col-md-6">
                <div class="card bg-primary text-white mb-4">
                    <div class="card-body">
                        <h5 class="card-title">@Model.SelectedRoomName</h5>
                        <p class="mb-0">Class: @(string.IsNullOrEmpty(Model.CleanRooms.FirstOrDefault(r => r.RoomID == Model.SelectedRoomId)?.CleanRoomClass) ? "N/A" : Model.CleanRooms.FirstOrDefault(r => r.RoomID == Model.SelectedRoomId)?.CleanRoomClass)</p>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6">
                <div class="card bg-success text-white mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Uptime</h5>
                        <p class="mb-0">@Model.UptimePercentage% within parameters</p>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6">
                <div class="card bg-warning text-white mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Sensors</h5>
                        <p class="mb-0">@Model.Sensors.Count active sensors</p>
                    </div>
                </div>
            </div>
            <div class="col-xl-3 col-md-6">
                <div class="card bg-info text-white mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Export Data</h5>
                        <a href="@Url.Action("ExportCSV", new { roomId = Model.SelectedRoomId, startDate = Model.StartDate, endDate = Model.EndDate })"
                        class="btn btn-outline-light btn-sm">Download CSV</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sensor Charts -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-chart-line me-1"></i>
                Sensor Trend Analysis
            </div>
            <div class="card-body">
                <ul class="nav nav-tabs" id="sensorTabs" role="tablist">
                    @foreach (var sensor in Model.Sensors) {
                        <li class="nav-item" role="presentation">
                            <button class="nav-link @(sensor == Model.Sensors.First() ? "active" : "")"
                            id="sensor-@sensor.SensorInfoID-tab"
                            data-bs-toggle="tab"
                            data-bs-target="#sensor-@sensor.SensorInfoID"
                            type="button" role="tab">
                                @sensor.SensorName
                            </button>
                        </li>
                    }
                </ul>
                <div class="tab-content mt-3" id="sensorTabContent">
                    @foreach (var sensor in Model.Sensors) {
                        <div class="tab-pane fade @(sensor == Model.Sensors.First() ? "show active" : "")"
                        id="sensor-@sensor.SensorInfoID" role="tabpanel">
                            <div class="row">
                                <div class="col-md-8">
                                    <canvas id="chart-@sensor.SensorInfoID" height="300"></canvas>
                                </div>
                                <div class="col-md-4">
                                    @if (Model.SensorStatistics.ContainsKey(sensor.SensorInfoID)) {
                                        var stats = Model.SensorStatistics[sensor.SensorInfoID];
                                        <h4>Statistics</h4>
                                        <table class="table table-sm">
                                            <tbody>
                                                <tr>
                                                    <th>Minimum:</th>
                                                    <td>@stats.MinValue @sensor.Unit</td>
                                                </tr>
                                                <tr>
                                                    <th>Maximum:</th>
                                                    <td>@stats.MaxValue @sensor.Unit</td>
                                                </tr>
                                                <tr>
                                                    <th>Average:</th>
                                                    <td>@stats.AvgValue.ToString("F2") @sensor.Unit</td>
                                                </tr>
                                                <tr>
                                                    <th>Standard Deviation:</th>
                                                    <td>@stats.StdDeviation.ToString("F2") @sensor.Unit</td>
                                                </tr>
                                                <tr>
                                                    <th>Valid Readings:</th>
                                                    <td>@stats.ValidReadings</td>
                                                </tr>
                                                <tr>
                                                    <th>Invalid Readings:</th>
                                                    <td>@stats.InvalidReadings</td>
                                                </tr>
                                                <tr>
                                                    <th>Alert Count:</th>
                                                    <td>@stats.AlertCount</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                      @*   <a href="@Url.Action("SensorDetail", new { sensorId = sensor.SensorInfoID, startDate = Model.StartDate, endDate = Model.EndDate })"
                                        class="btn btn-primary btn-sm">View Details</a> *@
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Alert Events -->
        <div class="card mb-4">
            <div class="card-header">
                <i class="fas fa-exclamation-triangle me-1"></i>
                Alert Events
            </div>
            <div class="card-body">
                @if (!Model.AlertEvents.Any()) {
                    <div class="alert alert-success">
                        No alerts recorded during the selected time period.
                    </div>
                }
                else {
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="alertsTable">
                            <thead>
                                <tr>
                                    <th>Sensor</th>
                                    <th>Alert Type</th>
                                    <th>Start Time</th>
                                    <th>End Time</th>
                                    <th>Duration</th>
                                    <th>Threshold</th>
                                    <th>Actual Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var sensorAlerts in Model.AlertEvents) {
                                    @foreach (var alert in sensorAlerts.Value) {
                                        <tr class="@(alert.AlertType == "High" ? "table-danger" : alert.AlertType == "Low" ? "table-warning" : "table-secondary")">
                                            <td>@alert.SensorName</td>
                                            <td>@alert.AlertType</td>
                                            <td>@alert.StartTime.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                            <td>@(alert.EndTime.HasValue ? alert.EndTime.Value.ToString("yyyy-MM-dd HH:mm:ss") : "N/A")</td>
                                            <td>@(alert.Duration.TotalHours.ToString("F1")) hours</td>
                                            <td>@alert.ThresholdValue</td>
                                            <td>@alert.ActualValue</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    }
    else {
        <div class="alert alert-info">
            <p>Please select a cleanroom to view analytics data.</p>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
           document.addEventListener('DOMContentLoaded', function() {
        @if (Model.SelectedRoomId.HasValue) {
            foreach (var sensor in Model.Sensors) {
                if (Model.DailyAverages.ContainsKey(sensor.SensorInfoID.ToString())) {
                    <text>
                                var ctx = document.getElementById('chart-@sensor.SensorInfoID').getContext('2d');
                                var chartData = @Html.Raw(Json.Serialize(Model.DailyAverages[sensor.SensorInfoID.ToString()]));

                                // Check if chartData is an array before using map
                                if (Array.isArray(chartData)) {
                                    new Chart(ctx, {
                                        type: 'line',
                                        data: {
                                            labels: chartData.map(function(d) { return new Date(d.timestamp).toLocaleDateString(); }),
                                            datasets: [{
                                                label: '@sensor.SensorName (@sensor.SensorTypeName, @sensor.Unit)',
                                                data: chartData.map(function(d) { return d.value; }),
                                                borderColor: 'rgba(75, 192, 192, 1)',
                                                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                                                tension: 0.1,
                                                fill: true
                                            }]
                                        },
                                        options: {
                                            responsive: true,
                                            plugins: {
                                                title: {
                                                    display: true,
                                                    text: 'Daily Average Values'
                                                },
                                                tooltip: {
                                                    callbacks: {
                                                        label: function(context) {
                                                            return context.dataset.label + ': ' + context.parsed.y + ' @sensor.Unit';
                                                        }
                                                    }
                                                }
                                            },
                                            scales: {
                                                y: {
                                                    title: {
                                                        display: true,
                                                        text: '@sensor.Unit'
                                                    }
                                                },
                                                x: {
                                                    title: {
                                                        display: true,
                                                        text: 'Date'
                                                    }
                                                }
                                            }
                                        }
                                    });
                                } else {
                                    console.warn('Chart data for sensor @sensor.SensorInfoID is not an array:', chartData);
                                    // You can add a fallback message or empty chart here
                                    document.getElementById('chart-@sensor.SensorInfoID').insertAdjacentHTML('afterend', 
                                        '<div class="alert alert-warning">No chart data available for this sensor.</div>');
                                }
                    </text>
                }
            }
        }

        // Initialize DataTable for alerts if present
        if (document.getElementById('alertsTable')) {
            $('#alertsTable').DataTable({
                order: [[2, 'desc']]
            });
        }
    });
    </script>
}