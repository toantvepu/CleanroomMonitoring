@model CleanroomMonitoring.Web.ViewComponents.CriticalAlertsViewModel
 
@if (Model.Summary.TotalUnhandledAlerts > 0) {
    <div class="alert alert-info d-flex justify-content-between align-items-center mb-3">
        <div>
            <strong>Alert Summary:</strong>
            <span class="badge bg-danger ms-1">@Model.Summary.CriticalAlertCount Critical</span>
            <span class="badge bg-warning text-dark ms-1">@Model.Summary.WarningAlertCount Warning</span>
            <span class="badge bg-info text-dark ms-1">@Model.Summary.InfoAlertCount Info</span>
        </div>
        <a asp-controller="Alerts" asp-action="Index" class="alert-link">View All (@Model.Summary.TotalUnhandledAlerts)</a>
    </div>
}

@if (Model.Alerts.Any()) {
    <div class="table-responsive">
        <table class="table table-hover table-sm">
            <thead>
                <tr>
                    <th>Sensor</th>
                    <th>Room</th>
                    <th>Value</th>
                    <th>Time</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var alert in Model.Alerts) {
                    <tr class="alert-@alert.SeverityClass">
                        <td>
                            <div class="d-flex align-items-center">
                                <i class="@alert.AlertIcon me-2"></i>
                                <div>
                                    <div>@alert.SensorName</div>
                                    <small class="text-muted">@alert.SensorType</small>
                                </div>
                            </div>
                        </td>
                        <td>
                            <a asp-controller="CleanRooms" asp-action="Details" asp-route-id="@alert.RoomID">
                                @alert.RoomName
                            </a>
                        </td>
                        <td>
                            <span class="fw-bold">@alert.AlertValue @alert.Unit</span>
                            <div>
                                <small class="text-@alert.SeverityClass">@alert.AlertMessage</small>
                            </div>
                        </td>
                        <td>
                            <span>@alert.TimeSinceAlert</span>
                            <small class="d-block text-muted">@alert.AlertTime?.ToString("yyyy-MM-dd HH:mm")</small>
                        </td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <a href="#" class="btn btn-outline-primary handle-alert-btn"
                                   data-alert-id="@alert.AlertID"
                                   data-bs-toggle="modal"
                                   data-bs-target="#handleAlertModal">
                                    <i class="bi bi-check-circle"></i>
                                </a>
                                <a asp-controller="Sensors2"
                                   asp-action="Details"
                                   asp-route-id="@alert.SensorInfoID"
                                   class="btn btn-outline-secondary">
                                    <i class="bi bi-graph-up"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Alert Handling Modal -->
    <div class="modal fade" id="handleAlertModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="handleAlertForm" method="post">
                    <div class="modal-header">
                        <h5 class="modal-title">Handle Alert</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="alertId" name="alertId" />
                        <div class="mb-3">
                            <label for="handlingNotes" class="form-label">Resolution Notes</label>
                            <textarea class="form-control" id="handlingNotes" name="handlingNotes" rows="3" required></textarea>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="createMaintenanceEvent" name="createMaintenanceEvent">
                            <label class="form-check-label" for="createMaintenanceEvent">
                                Create Maintenance Event
                            </label>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Mark as Handled</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Set the alert ID when the modal is shown
            document.querySelectorAll('.handle-alert-btn').forEach(button => {
                button.addEventListener('click', function() {
                    document.getElementById('alertId').value = this.getAttribute('data-alert-id');
                });
            });

            // Handle form submission
            document.getElementById('handleAlertForm').addEventListener('submit', function(e) {
                e.preventDefault();

                const alertId = document.getElementById('alertId').value;
                const notes = document.getElementById('handlingNotes').value;
                const createMaintenance = document.getElementById('createMaintenanceEvent').checked;

                // Send AJAX request to handle the alert
                fetch('/api/Alerts/HandleAlert', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        alertId: alertId,
                        notes: notes,
                        createMaintenanceEvent: createMaintenance
                    }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Close the modal
                        const modalElement = document.getElementById('handleAlertModal');
                        const modal = bootstrap.Modal.getInstance(modalElement);
                        modal.hide();

                        // Refresh the alerts section
                        location.reload();
                    } else {
                        alert('Error: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while handling the alert');
                });
            });
        });
    </script>
}
else {
    <div class="alert alert-success">
        <i class="bi bi-check-circle-fill me-2"></i> No critical alerts at this time.
    </div>
}

@if (!Model.Alerts.Any() && Model.Summary.TotalUnhandledAlerts > 0) {
    <div class="text-center mt-3">
        <a asp-controller="Alerts" asp-action="Index" class="btn btn-sm btn-outline-primary">
            View All Alerts (@Model.Summary.TotalUnhandledAlerts)
        </a>
    </div>
}